# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
amr_mesh.lo_corner       = -1 -1 -1    # Low corner of problem domain
amr_mesh.hi_corner       =  1  1  1    # High corner of problem domain
amr_mesh.verbosity       = -1          # Controls verbosity. 
amr_mesh.coarsest_domain = 128 128 128 # Number of cells on coarsest domain
amr_mesh.max_amr_depth   = 3           # Maximum amr depth
amr_mesh.max_sim_depth   = -1          # Maximum simulation depth
amr_mesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
amr_mesh.fill_ratio      = 1.0         # Fill ratio for grid generation
amr_mesh.irreg_growth    = 2           # How much to grow irregular tagged cells
amr_mesh.buffer_size     = 2           # Number of cells between grid levels
amr_mesh.grid_algorithm  = br          # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
amr_mesh.box_sorting     = morton      # Morton sorting
amr_mesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
amr_mesh.max_box_size    = 16          # Maximum allowed box size
amr_mesh.max_ebis_box    = 16          # Maximum allowed box size
amr_mesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
amr_mesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
amr_mesh.num_ghost       = 3           # Number of ghost cells. Default is 3
amr_mesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
amr_mesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
amr_mesh.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
amr_mesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
amr_mesh.ebcf            = true        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
driver.verbosity                       = 2             # Engine verbosity
driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
driver.plot_interval                   = 5             # Plot interval
driver.regrid_interval                 = 5             # Regrid interval
driver.checkpoint_interval             = 5             # Checkpoint interval
driver.initial_regrids                 = 0             # Number of initial regrids
driver.write_regrid_files              = false         # Write regrid files or not
driver.write_restart_files             = false         # Write restart files or not
driver.start_time                      = 0             # Start time (fresh simulations only)
driver.stop_time                       = 1.0           # Stop time
driver.max_steps                       = 100           # Maximum number of steps
driver.geometry_only                   = false         # Special option that ONLY plots the geometry
driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
driver.write_memory                    = false         # Write MPI memory report
driver.write_loads                     = false         # Write (accumulated) computational loads
driver.output_directory                = ./            # Output directory
driver.output_names                    = simulation    # Simulation output names
driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
driver.allow_coarsening                = true          # Allows removal of grid levels according to cell_tagger
driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----

# ====================================================================================================
# EDDINGTON_SP1 CLASS OPTIONS
# ====================================================================================================
eddington_sp1.stationary          = false      # Stationary solver
eddington_sp1.reflectivity        = 0.        # Reflectivity
eddington_sp1.use_tga             = false     # Use TGA for integration
eddington_sp1.plt_vars            = phi src   # Plot variables. Available are 'phi' and 'src'
eddington_sp1.gmg_verbosity       = -1        # GMG verbosity
eddington_sp1.gmg_coarsen         = 4         # Precoarsening of multigrid levels
eddington_sp1.gmg_pre_smooth      = 8         # Number of relaxations in downsweep
eddington_sp1.gmg_post_smooth     = 8         # Number of relaxations in upsweep
eddington_sp1.gmg_bott_smooth     = 8         # NUmber of relaxations before dropping to bottom solver
eddington_sp1.gmg_min_iter        = 5         # Minimum number of iterations
eddington_sp1.gmg_max_iter        = 32        # Maximum number of iterations
eddington_sp1.gmg_tolerance       = 1.E-6     # Residue tolerance
eddington_sp1.gmg_hang            = 0.2       # Solver hang
eddington_sp1.gmg_bottom_drop     = 2         # Bottom drop
eddington_sp1.gmg_bottom_solver   = bicgstab  # Bottom solver type. Valid options are 'simple' and 'bicgstab'
eddington_sp1.gmg_bottom_relax    = 8         # Number of relaxations in bottom solve ('simple' solver only)
eddington_sp1.gmg_cycle           = vcycle    # Cycle type. Only 'vcycle' supported for now
eddington_sp1.gmg_relax_type      = gsrb      # Relaxation type. 'jacobi', 'gauss_seidel', or 'gsrb'
eddington_sp1.bc_x_low            = robin     # Boundary on domain. 'neumann' or 'robin'
eddington_sp1.bc_x_high           = robin     # Boundary on domain. 'neumann' or 'robin'              
eddington_sp1.bc_y_low            = robin     # Boundary on domain. 'neumann' or 'robin'
eddington_sp1.bc_y_high           = robin     # Boundary on domain. 'neumann' or 'robin'
eddington_sp1.bc_z_low            = robin     # Boundary on domain. 'neumann' or 'robin'
eddington_sp1.bc_z_high           = robin     # Boundary on domain. 'neumann' or 'robin'		

# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
geo_coarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
geo_coarsener.box1_lo     = -1 -0.1         # Remove irregular cell tags 
geo_coarsener.box1_hi     =  1 2         # between these two corners
geo_coarsener.box1_lvl    = 0            # up to this level
geo_coarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
rod_dielectric.electrode.on              = false         # Use electrode or not
rod_dielectric.electrode.endpoint1       = 0 0 0         # One endpoint
rod_dielectric.electrode.endpoint2       = 0 0 2         # Other endpoint
rod_dielectric.electrode.radius          = 0.1           # Electrode radius
rod_dielectric.electrode.live            = true          # Live or not

rod_dielectric.dielectric.on             = true          # Use dielectric or not
rod_dielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
rod_dielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for sphere
rod_dielectric.sphere.center             = 0 0 0         # Sphere center
rod_dielectric.sphere.radius             = 0.15          # Radius

# ====================================================================================================
# RTE_STEPPER CLASS OPTIONS
# ====================================================================================================
rte_stepper.verbosity      = -1      # Verbosity
rte_stepper.realm          = primal  # Realm 
rte_stepper.kappa          = 0.1     # Inverse absorption coefficient
rte_stepper.blob_amplitude = 1E2     # Blob amplitude
rte_stepper.blob_radius    = 0.05    # Blob radius
rte_stepper.blob_center    = 0.5 0.5 # Blob center
