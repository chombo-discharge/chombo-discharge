      subroutine average_ghosts(
     &     chf_fra1[dst],
     &     chf_const_fra1[src],
     &     chf_box[finebox],
     &     chf_const_int[refrat],
     &     chf_const_real[factor])

      integer chf_ddecl[icc; jcc; kcc]
      integer chf_ddecl[iff; jff; kff]
      integer chf_ddecl[ii; jj; kk]

c     Beware - the fine to coarse grid mapping only makes sense if fine-box indices are non-negative.
c
      chf_multido[finebox; iff; jff; kff ]
         chf_dterm[icc = iff/refrat;
                   jcc = jff/refrat;
                   kcc = kff/refrat]
         dst(chf_ix[icc; jcc; kcc]) = dst(chf_ix[icc; jcc; kcc]) + src(chf_ix[iff;jff;kff])*factor
      chf_enddo

      return
      end


      subroutine piecewise_constant_interp(
     &     chf_fra1[refCoarData],
     &     chf_const_fra1[coarData],
     &     chf_const_int[refRat],
     &     chf_box[refBox],
     &     chf_box[coarBox])

      integer chf_ddecl[iic; jjc; kkc]
      integer chf_ddecl[iie; jje; kke]
      integer chf_ddecl[iif; jjf; kkf]

c This does as follows. We begin by iterating over all the coarse cells. For each cell in the coarse cell we happen to know
c the number of cells that occdur if we refine that cell by refRat. This is given by refBox which is a box spanning (IntVect::Zero, refRat*IntVect::Unit). So
c each cell in the refBox corresponds to a particular cell in the refined coarse cell. So, the fine-cell indices are just ivCoar*refRat + cells in refBox.
      chf_multido[coarBox; iic; jjc; kkc]
         chf_multido[refBox; iie; jje; kke]
            chf_dterm[
               iif = refRat*iic + iie;
               jjf = refRat*jjc + jje;
               kkf = refRat*kkc + kke]

            refCoarData(chf_ix[iif; jjf; kkf]) = coarData(chf_ix[iic; jjc; kkc])
         chf_enddo	 
      chf_enddo
      return
      end
