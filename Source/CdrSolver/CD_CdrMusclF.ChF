      subroutine muscl_slopes(
     &     chf_fra1[deltaC],
     &     chf_const_fra1[state],
     &     chf_const_int[dir],
     &     chf_box[region],
     &)

c     dwc is the central slope, dwl the left slope, dwr the right slope
c     and dqlim is the limited slope (which becomes deltaC)

      real_t dwc, dwl, dwr, dqlim
      integer chf_ddecl[i;j;k]
      integer chf_ddecl[ioff; joff; koff]
      
      chf_dterm[
      ioff = chf_id(0, dir);
      joff = chf_id(1, dir);
      koff = chf_id(2, dir)]

      chf_multido[region; i; j; k]
         dwl = state(chf_ix[i;      j;      k])      - state(chf_ix[i-ioff; j-joff; k-koff])
         dwr = state(chf_ix[i+ioff; j+joff; k+koff]) - state(chf_ix[i;      j;     k])
         dwc = half*(dwl + dwr)
         if(dwl*dwr .lt. zero) then
            dqlim = 0.0
         else
            dqlim = min(two*abs(dwl), two*abs(dwr))
            dqlim = min(dqlim, abs(dwc))*sign(one, dwc)
         endif
         deltaC(chf_ix[i;j;k]) = dqlim
      chf_enddo
      
      return
      end


      subroutine muscl_upwind(
     &     chf_fra1[face_states],
     &     chf_const_fra1[cell_slopes],
     &     chf_const_fra1[cell_states],
     &     chf_const_fra1[face_vel],
     &     chf_const_int[dir],
     &     chf_box[face_box])

      integer chf_ddecl[i;j;k]
      integer chf_ddecl[ioff; joff; koff]
      real_t phi, vel, prim_left, prim_righ, tol

      chf_dterm[
      ioff = chf_id(0, dir);
      joff = chf_id(1, dir);
      koff = chf_id(2, dir)]

      chf_multido[face_box; i; j; k]
         prim_left = cell_states(chf_ix[i-ioff;j-joff; k-koff]) + half*cell_slopes(chf_ix[i-ioff; j-joff; k-koff])
         prim_righ = cell_states(chf_ix[i;     j;      k])      - half*cell_slopes(chf_ix[i;      j;      k])
         vel       = face_vel(chf_ix[i; j; k])

         face_states(chf_ix[i;j;k]) = 0.5*(prim_left + prim_righ)
         if(vel > 0.0) then
            face_states(chf_ix[i;j;k]) = prim_left
         else if(vel < 0.0) then
            face_states(chf_ix[i;j;k]) = prim_righ
         endif            
      chf_enddo
      return
      end
