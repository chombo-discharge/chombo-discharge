# ====================================================================================================
# POTENTIAL CURVE
# ====================================================================================================
cdr_plasma.potential = 40E3
cdr_plasma.basename  = pout

# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
AmrMesh.lo_corner       = -1E-2 -1E-2 # Low corner of problem domain
AmrMesh.hi_corner       =  1E-2  1E-2 # High corner of problem domain
AmrMesh.verbosity       = -1          # Controls verbosity. 
AmrMesh.coarsest_domain = 64 64 # Number of cells on coarsest domain
AmrMesh.max_amr_depth   = 6           # Maximum amr depth
AmrMesh.max_sim_depth   = -1          # Maximum simulation depth
AmrMesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
AmrMesh.fill_ratio      = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size     = 2           # Number of cells between grid levels
AmrMesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
AmrMesh.grid_algorithm  = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting     = morton      # 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
AmrMesh.max_box_size    = 16          # Maximum allowed box size
AmrMesh.max_ebis_box    = 16          # Maximum allowed box size
AmrMesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
AmrMesh.num_ghost       = 3           # Number of ghost cells. Default is 3
AmrMesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 3           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
AmrMesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
Driver.verbosity                       = 2             # Engine verbosity
Driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
Driver.plot_interval                   = 5            # Plot interval
Driver.regrid_interval                 = 5             # Regrid interval
Driver.checkpoint_interval             = -1            # Checkpoint interval
Driver.write_regrid_files              = false         # Write regrid files or not. 
Driver.write_restart_files             = false         # Write restart files or not
Driver.initial_regrids                 = 0             # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0             # Start time (fresh simulations only)
Driver.stop_time                       = 1.0           # Stop time
Driver.max_steps                       = 10            # Maximum number of steps
Driver.geometry_only                   = false         # Special option that ONLY plots the geometry
Driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
Driver.write_memory                    = false         # Write MPI memory report
Driver.write_loads                     = false         # Write (accumulated) computational loads
Driver.output_directory                = ./            # Output directory
Driver.output_names                    = simulation    # Simulation output names
Driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
Driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
Driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true          # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2             # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 30.           # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0             # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0             # Refine dielectric surfaces. -1 => equal to refine_geometry


# ====================================================================================================
# FIELD_SOLVER_MULTIGRID_GMG CLASS OPTIONS (MULTIFLUID GMG SOLVER SETTINGS)
# ====================================================================================================
FieldSolverMultigrid.verbosity         = -1                # Class verbosity
FieldSolverMultigrid.jump_bc           = natural           # Jump BC type ('natural' or 'saturation_charge')
FieldSolverMultigrid.bc.x.lo   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.x.hi   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.y.lo   = dirichlet 0.0     # Bc type.
FieldSolverMultigrid.bc.y.hi   = dirichlet 1.0     # Bc type.
FieldSolverMultigrid.plt_vars  = phi rho E res     # Plot variables. Possible vars are 'phi', 'rho', 'E', 'res'
FieldSolverMultigrid.use_regrid_slopes = true              # Use slopes when regridding or not
FieldSolverMultigrid.kappa_source = true              # Volume weighted space charge density or not (depends on algorithm)	
FieldSolverMultigrid.filter            = 0                 # Number of filterings after Poisson solve

FieldSolverMultigrid.gmg_verbosity     = -1        # GMG verbosity
FieldSolverMultigrid.gmg_pre_smooth    = 12        # Number of relaxations in downsweep
FieldSolverMultigrid.gmg_post_smooth   = 12        # Number of relaxations in upsweep
FieldSolverMultigrid.gmg_bott_smooth   = 12        # NUmber of relaxations before dropping to bottom solver
FieldSolverMultigrid.gmg_min_iter      = 5         # Minimum number of iterations
FieldSolverMultigrid.gmg_max_iter      = 32        # Maximum number of iterations
FieldSolverMultigrid.gmg_exit_tol      = 1.E-10    # Residue tolerance
FieldSolverMultigrid.gmg_exit_hang     = 0.2       # Solver hang
FieldSolverMultigrid.gmg_min_cells     = 4         # Bottom drop
FieldSolverMultigrid.gmg_drop_order    = 0                 # Drop stencil order to 1 if domain is coarser than this.
FieldSolverMultigrid.gmg_bc_order      = 2         # Boundary condition order for multigrid
FieldSolverMultigrid.gmg_bc_weight     = 2         # Boundary condition weights (for least squares)
FieldSolverMultigrid.gmg_jump_order    = 2         # Boundary condition order for jump conditions
FieldSolverMultigrid.gmg_jump_weight   = 2         # Boundary condition weight for jump conditions (for least squares)
FieldSolverMultigrid.gmg_bottom_solver = bicgstab  # Bottom solver type. 'simple', 'bicgstab', or 'gmres'
FieldSolverMultigrid.gmg_cycle         = vcycle    # Cycle type. Only 'vcycle' supported for now
FieldSolverMultigrid.gmg_smoother      = red_black # Relaxation type. 'jacobi', 'multi_color', or 'red_black'

# ====================================================================================================
# CDR_GDNV SOLVER SETTINGS
# ----------------------------------------------------------------------------------------------------
CdrGodunov.seed                 = 0                       # Seed. Random seed with seed < 0
CdrGodunov.bc.x.lo               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.bc.x.hi               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.bc.y.lo               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.bc.y.hi               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.bc.z.lo               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.bc.z.hi               = wall                    # 'data', 'function', 'wall', or 'outflow'
CdrGodunov.limit_slopes         = true                    # Use slope-limiters for godunov
CdrGodunov.plt_vars             = phi vel src dco ebflux  # Plot variables. Options are 'phi', 'vel', 'dco', 'src'
CdrGodunov.extrap_source        = true                    # Flag for including source term for time-extrapolation
CdrGodunov.blend_conservation   = true                    # Turn on/off blending with nonconservative divergenceo
CdrGodunov.which_redistribution  = volume                  # Redistribution type. 'volume', 'mass', or 'none' (turned off)
CdrGodunov.use_regrid_slopes     = false                   # Turn on/off slopes when regridding
CdrGodunov.plot_mode            = density                 # Plot densities 'density' or particle numbers ('numbers')
CdrGodunov.gmg_verbosity        = -1                      # GMG verbosity
CdrGodunov.gmg_pre_smooth       = 6                       # Number of relaxations in GMG downsweep
CdrGodunov.gmg_post_smooth      = 6                       # Number of relaxations in upsweep
CdrGodunov.gmg_bott_smooth      = 6                       # NUmber of relaxations before dropping to bottom solver
CdrGodunov.gmg_min_iter         = 5                       # Minimum number of iterations
CdrGodunov.gmg_max_iter         = 32                      # Maximum number of iterations
CdrGodunov.gmg_exit_tol         = 1.E-8                   # Residue tolerance
CdrGodunov.gmg_exit_hang        = 0.2                     # Solver hang
CdrGodunov.gmg_min_cells        = 2                       # Bottom drop
CdrGodunov.gmg_bottom_solver    = bicgstab                # Bottom solver type. Valid options are 'simple' and 'bicgstab'
CdrGodunov.gmg_cycle            = vcycle                  # Cycle type. Only 'vcycle' supported for now
CdrGodunov.gmg_smoother          = red_black               # Relaxation type. 'jacobi', 'multi_color', or 'red_black'

# ====================================================================================================
# MC_PHOTO CLASS OPTIONS
# ====================================================================================================
McPhoto.verbosity          = -1            # Solver verbosity
McPhoto.instantaneous      = true          # Instantaneous transport or not
McPhoto.max_photons        = 1             # Maximum no. generated in a cell (< = 0 yields physical Photons)
McPhoto.blend_conservation = false         # Switch for blending with the nonconservative divergence
McPhoto.transparent_eb     = false         # Turn on/off transparent boundaries. Only for instantaneous=true
McPhoto.random_kappa       = true          # Randomize absorption length (taken from Photon implementation)
McPhoto.plt_vars           = phi src phot  # Available are 'phi' and 'src', 'phot', 'eb_phot', 'dom_phot', 'bulk_phot', 'src_phot'
McPhoto.plot_deposition    = cic           # Cloud-in-cell for plotting particles. 
McPhoto.intersection_alg   = bisection     # EB intersection algorithm. Supported are: 'raycast' 'bisection'
McPhoto.bisect_step        = 1.E-4         # Bisection step length for intersection tests
McPhoto.seed               = 0             # Seed for RNG
McPhoto.bc_x_low           = outflow       # Boundary condition. 'outflow', 'symmetry', or 'wall'
McPhoto.bc_x_high          = outflow       # Boundary condition
McPhoto.bc_y_low           = outflow       # Boundary condition
McPhoto.bc_y_high          = outflow       # Boundary condition
McPhoto.bc_z_low           = outflow       # Boundary condition
McPhoto.bc_z_high          = outflow       # Boundary condition
McPhoto.photon_generation  = deterministic # Volumetric source term. 'deterministic' or 'stochastic'
McPhoto.source_type        = number        # 'number'       = Source term contains the number of Photons produced
                                            # 'volume'       = Source terms contains the number of Photons produced per unit volume
                                            # 'volume_rate'  = Source terms contains the volumetric rate
                                            # 'rate'         = Source terms contains the rate
McPhoto.deposition         = cic           # 'ngp'  = nearest grid point
McPhoto.deposition_cf      = halo          # Coarse-fine deposition. Must be interp or halo
                                            # 'num'  = # of Photons per cell
                                            # 'cic'  = cloud-in-cell
                                            # 'tsc'  = triangle-shaped-cloud
                                            # 'w4'   = 3rd order interpolation

# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1 500E-6    # Remove irregular cell tags 
GeoCoarsener.box1_hi     =  1 1         # between these two corners
GeoCoarsener.box1_lvl    = 3            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
RodDielectric.electrode.on              = true          # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0           # One endpoint
RodDielectric.electrode.endpoint2       = 0 1           # Other endpoint
RodDielectric.electrode.radius          = 250E-6        # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = false         # Use dielectric or not
RodDielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for 'plane'
RodDielectric.plane.point               = 0 0 -0.5      # Plane point
RodDielectric.plane.normal              = 0 0 1         # Plane normal vector (outward)

# Subsettings for 'box'
RodDielectric.box.lo_corner             = -.75 -.75 -.75 # Lo box corner
RodDielectric.box.hi_corner             =  .75  .75 -.25 # High box corner
RodDielectric.box.curvature             = 0.2

# Subsettings for 'perlin_box'
RodDielectric.perlin_box.point          = 0  0 -0.5     # Slab center-point (side with roughness)
RodDielectric.perlin_box.normal         = 0  0  1       # Slab normal
RodDielectric.perlin_box.curvature      = 0.5           # Slab rounding radius
RodDielectric.perlin_box.dimensions     = 1  1  10      # Slab dimensions
RodDielectric.perlin_box.noise_amp      = 0.1           # Noise amplitude
RodDielectric.perlin_box.noise_octaves  = 1             # Noise octaves
RodDielectric.perlin_box.noise_persist  = 0.5           # Octave persistence
RodDielectric.perlin_box.noise_freq     = 5 5 5         # Noise frequency
RodDielectric.perlin_box.noise_reseed   = false         # Reseed noise or not

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 -0.5      # Low corner
RodDielectric.sphere.radius             = 0.25          # Radius


# ====================================================================================================
# CdrPlasmaGodunovStepper options
# ====================================================================================================
CdrPlasmaGodunovStepper.verbosity        = -1            # Class verbosity
CdrPlasmaGodunovStepper.solver_verbosity = -1            # Individual solver verbosities
CdrPlasmaGodunovStepper.min_dt           = 0.            # Minimum permitted time step
CdrPlasmaGodunovStepper.max_dt           = 1.E99         # Maximum permitted time step
CdrPlasmaGodunovStepper.cfl              = 0.8           # CFL number
CdrPlasmaGodunovStepper.use_regrid_slopes = true          # Use slopes when regridding (or not)
CdrPlasmaGodunovStepper.field_coupling   = semi_implicit # Field coupling. 'explicit' or 'semi_implicit'
CdrPlasmaGodunovStepper.advection        = muscl         # Advection algorithm. 'euler', 'rk2', or 'muscl'
CdrPlasmaGodunovStepper.diffusion        = explicit      # Diffusion. 'explicit', 'implicit', or 'auto'. 
CdrPlasmaGodunovStepper.diffusion_thresh = 1.2           # Diffusion threshold. If dtD/dtA > this then we use implicit diffusion.
CdrPlasmaGodunovStepper.diffusion_order  = 2             # Diffusion order. 
CdrPlasmaGodunovStepper.relax_time       = 1.E99         # Relaxation time constant. Not necessary for semi-implicit scheme. 
CdrPlasmaGodunovStepper.fast_poisson     = 1             # Solve Poisson every this time steps. Mostly for debugging.
CdrPlasmaGodunovStepper.fast_rte         = 1             # Solve RTE every this time steps. Mostly for debugging.
CdrPlasmaGodunovStepper.fhd              = false         # Set to true if you want to add a stochastic diffusion flux
CdrPlasmaGodunovStepper.source_comp      = interp2       # Interpolated 'interp', 'interp2', or 'upwind X' for first species (X = integer).
CdrPlasmaGodunovStepper.floor_cdr        = true          # Floor CDR solvers to avoid negative densities
CdrPlasmaGodunovStepper.debug            = false         # Turn on debugging messages. Also monitors mass if it was injected into the system. 
CdrPlasmaGodunovStepper.profile          = false         # Turn on/off performance profiling.


# ====================================================================================================
# AIR7_STEPHENS CLASS OPTIONS
# ====================================================================================================	

# ----------------------------------------------------------------------------------------------------	
# Transport file and # of points to use when converting files to uniform spacings
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.transport_file      = transport_data.txt          # Transport file
CdrPlasmaAir7Stephens.uniform_tables      = 100	                   #  Converted # of points in transport file

# ----------------------------------------------------------------------------------------------------	
# Gas composition. This should match your BOLSIG stuff!
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.pressure            = 1.0                         # Gas pressure
CdrPlasmaAir7Stephens.temperature         = 300                         # Gas temperature
CdrPlasmaAir7Stephens.frac_N2             = 0.8                         # N2 fraction
CdrPlasmaAir7Stephens.frac_O2             = 0.2                         # O2 fraction

# ----------------------------------------------------------------------------------------------------	
# Transport properties
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.use_alpha_corr      = false                       # Soloviev alpha correction	
CdrPlasmaAir7Stephens.mobile_electrons    = true                        # Mobile electrons or not
CdrPlasmaAir7Stephens.diffusive_electrons = true                        # Diffusive electrons or not
CdrPlasmaAir7Stephens.mobile_ions         = false                       # Mobile ions or not
CdrPlasmaAir7Stephens.diffusive_ions      = false                       # Diffusive ions or not
CdrPlasmaAir7Stephens.ion_mobility        = 2.E-4                       # Ion mobility

# ----------------------------------------------------------------------------------------------------	
# Chemistry algorithm
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.chemistry_algorithm = euler # 'euler', 'rk2', or 'rk4'
CdrPlasmaAir7Stephens.chemistry_dt        = 1.0   # Minimum dt used for chemistry

# ----------------------------------------------------------------------------------------------------
# RNG stuff
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.rng_seed            = 0    # RNG seed. < 0 gives a random seed
CdrPlasmaAir7Stephens.poiss_exp_swap      = 100  # Swap from Poisson to exponential distribution

# ----------------------------------------------------------------------------------------------------
# Initial data
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.uniform_density       = 1.E4         # Uniform density
CdrPlasmaAir7Stephens.seed_density          = 1.E18        # Gaussian seed density
CdrPlasmaAir7Stephens.seed_radius           = 250E-6       # Gaussian seed radius
CdrPlasmaAir7Stephens.seed_position         = 0 0          # Gaussian seed position

# ----------------------------------------------------------------------------------------------------	
# SEE coefficients
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.electrode_townsend2           = 1.E-6             # SEE on electrodes
CdrPlasmaAir7Stephens.dielectric_townsend2          = 1.E-6             # SEE on dielectrics
CdrPlasmaAir7Stephens.electrode_quantum_efficiency  = 1.E-6             # SEE on electrodes
CdrPlasmaAir7Stephens.dielectric_quantum_efficiency = 1.E-6             # SEE on dielectrics

# ----------------------------------------------------------------------------------------------------	
# Exitation efficiencies, photoionization efficiences, quenching pressure, radiative lifetimes,
# and predissociation lifetime, and absorption lengths. These are pressure independent.
# ----------------------------------------------------------------------------------------------------
CdrPlasmaAir7Stephens.photoi_factor        = 1.0       # Correction factor photoionization

CdrPlasmaAir7Stephens.c4v0_exc_rep         = 0.8       # Relative excitation probability
CdrPlasmaAir7Stephens.c4v1_exc_rep         = 0.034     # Relative excitation probability
CdrPlasmaAir7Stephens.b1v1_exc_rep         = 0.014     # Relative excitation probability

CdrPlasmaAir7Stephens.c4v0_kp              = 2.39E8    # Predissociation rate
CdrPlasmaAir7Stephens.c4v1_kp              = 17.7E8    # Predissociation rate
CdrPlasmaAir7Stephens.b1v1_kp              = 4.68E8    # Predissociation rate

CdrPlasmaAir7Stephens.c4v0_X1v0_kr         = 11.2E8    # Radiative rate
CdrPlasmaAir7Stephens.c4v0_X1v1_kr         = 1.89E8    # Radiative rate
CdrPlasmaAir7Stephens.c4v1_X1v0_kr         = 0.41E8    # Radiative rate
CdrPlasmaAir7Stephens.c4v1_X1v1_kr         = 6.97E8    # Radiative rate
CdrPlasmaAir7Stephens.c4v1_X1v2_kr         = 4.06E8    # Radiative rate
CdrPlasmaAir7Stephens.c4v1_X1v3_kr         = 1.45E8    # Radiative rate
CdrPlasmaAir7Stephens.b1v1_X1v0_kr         = 0.42E8    # Radiative rate
CdrPlasmaAir7Stephens.b1v1_X1v1_kr         = 0.80E8    # Radiative rate

CdrPlasmaAir7Stephens.k_quench             = 1.E-17    # Collisional quenching rate/N

CdrPlasmaAir7Stephens.c4v0_X1v0_photoi_eff = 0.23      # Photoionization efficiency
CdrPlasmaAir7Stephens.c4v0_X1v1_photoi_eff = 0.77      # Photoionization efficiency
CdrPlasmaAir7Stephens.c4v1_X1v0_photoi_eff = 0.045     # Photoionization efficiency
CdrPlasmaAir7Stephens.c4v1_X1v1_photoi_eff = 0.10      # Photoionization efficiency
CdrPlasmaAir7Stephens.c4v1_X1v2_photoi_eff = 0.75      # Photoionization efficiency
CdrPlasmaAir7Stephens.c4v1_X1v3_photoi_eff = 0.69      # Photoionization efficiency
CdrPlasmaAir7Stephens.b1v1_X1v0_photoi_eff = 0.72      # Photoionization efficiency
CdrPlasmaAir7Stephens.b1v1_X1v1_photoi_eff = 0.69      # Photoionization efficiency

CdrPlasmaAir7Stephens.c4v0_X1v0_beer       = 19E-6     # Beer's length per bar
CdrPlasmaAir7Stephens.c4v0_X1v1_beer       = 146E-6    # Beer's length per bar
CdrPlasmaAir7Stephens.c4v1_X1v0_beer       = 30E-6     # Beer's length per bar
CdrPlasmaAir7Stephens.c4v1_X1v1_beer       = 21E-6     # Beer's length per bar
CdrPlasmaAir7Stephens.c4v1_X1v2_beer       = 58E-6     # Beer's length per bar
CdrPlasmaAir7Stephens.c4v1_X1v3_beer       = 158E-6    # Beer's length per bar
CdrPlasmaAir7Stephens.b1v1_X1v0_beer       = 236E-6    # Beer's length per bar
CdrPlasmaAir7Stephens.b1v1_X1v1_beer       = 298E-6    # Beer's length per bar

# ====================================================================================================
# STREAMER_TAGGER CLASS OPTIONS
# ====================================================================================================
CdrPlasmaStreamerTagger.verbosity         = -1           # Verbosity
CdrPlasmaStreamerTagger.num_tag_boxes     = 0            # Number of allowed tag boxes (0 = tags allowe everywhere)
CdrPlasmaStreamerTagger.tag_box1_lo       = 0.0 0.0 0.0  # Only allow tags that fall between
CdrPlasmaStreamerTagger.tag_box1_hi       = 0.0 0.0 0.0  # these two corners
CdrPlasmaStreamerTagger.buffer            = 0            # Grow tagged cells

CdrPlasmaStreamerTagger.refine_curvature  = 3.0          # Curvature refinement
CdrPlasmaStreamerTagger.coarsen_curvature = 10.0         # Curvature coarsening	
CdrPlasmaStreamerTagger.refine_alpha      = 1.5          # Set alpha refinement. Lower  => More mesh
CdrPlasmaStreamerTagger.coarsen_alpha     = 5.0          # Set alpha coarsening. Higher => Less mesh
CdrPlasmaStreamerTagger.max_coarsen_lvl   = 0            # Set max coarsening depth
