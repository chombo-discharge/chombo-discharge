# ====================================================================================================
# AmrMesh class options
# ====================================================================================================
AmrMesh.lo_corner        = -1 -1 -1    # Low corner of problem domain
AmrMesh.hi_corner        =  1  1  1    # High corner of problem domain
AmrMesh.verbosity        = -1          # Controls verbosity. 
AmrMesh.coarsest_domain  = 64 64 64   # Number of cells on coarsest domain
AmrMesh.max_amr_depth    = 0           # Maximum amr depth
AmrMesh.max_sim_depth    = -1          # Maximum simulation depth
AmrMesh.fill_ratio       = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size      = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm   = br          # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting      = morton      # 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor  = 8           # Blocking factor. 
AmrMesh.max_box_size     = 8           # Maximum allowed box size
AmrMesh.max_ebis_box     = 16          # Maximum allowed box size for EBIS generation. 
AmrMesh.ref_rat          = 2 2 2 2 2 2 # Refinement ratios (mixed ratios are allowed). 
AmrMesh.num_ghost        = 2           # Number of ghost cells. 
AmrMesh.lsf_ghost        = 2           # Number of ghost cells when writing level-set to grid
AmrMesh.eb_ghost         = 4           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 2           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten    = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten          = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius    = 1           # Redistribution radius for hyperbolic conservation laws


# ====================================================================================================
# Driver class options
# ====================================================================================================
Driver.verbosity                       = 2                # Engine verbosity
Driver.geometry_generation             = chombo-discharge # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0                # Geometry scan level for chombo-discharge geometry generator
Driver.ebis_memory_load_balance        = false            # If using Chombo geo-gen, use memory as loads for EBIS generation  
Driver.plot_interval                   = 1                # Plot interval
Driver.checkpoint_interval             = 10               # Checkpoint interval
Driver.regrid_interval                 = 10               # Regrid interval
Driver.write_regrid_files              = false            # Write regrid files or not.
Driver.write_restart_files             = false            # Write restart files or not
Driver.initial_regrids                 = 0                # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0                # Start time (fresh simulations only)
Driver.stop_time                       = 10.0             # Stop time
Driver.max_steps                       = 500              # Maximum number of steps
Driver.geometry_only                   = false            # Special option that ONLY plots the geometry
Driver.write_memory                    = false            # Write MPI memory report
Driver.write_loads                     = false            # Write (accumulated) computational loads
Driver.output_directory                = ./               # Output directory
Driver.output_names                    = simulation       # Simulation output names
Driver.max_plot_depth                  = -1               # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1               # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1                # Number of ghost cells to include in plots
Driver.plt_vars                        = levelset         # 'tags', 'mpi_rank', 'levelset'
Driver.restart                         = 0                # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true             # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 0                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 1.               # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0                # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0                # Refine dielectric surfaces. -1 => equal to refine_geometry

# ====================================================================================================
# TracerParticleSolver class options
# ====================================================================================================
TracerParticleSolver.verbosity     = -1     # Solver verbosity level. 
TracerParticleSolver.deposition    = cic    # Deposition method. Must be 'ngp' or 'cic'
TracerParticleSolver.interpolation = cic    # Interpolation method. Must be 'ngp' or 'cic'
TracerParticleSolver.deposition_cf = halo   # Coarse-fine deposition. Must be interp or halo
TracerParticleSolver.plot_weight   = true   # Turn on/off plotting of the particle weight.
TracerParticleSolver.plot_velocity = true   # Turn on/off plotting of the particle velocities.
TracerParticleSolver.volume_scale  = false  # If true, depositions yield density * volume instead of just volume

# ====================================================================================================
# CoaxialCable geometry class options
#
# This is a coaxial cable class with outer and inner electrodes, and a dielectric.
# Use CoaxialCable.endpoint1(2) to specify endpoints. Only endpoint1 is used in 2D. 
# ====================================================================================================
CoaxialCable.endpoint1           =  0  0 -2  # One endpopint
CoaxialCable.endpoint2           =  0  0  2  # Other endpoint

CoaxialCable.outer.on            = true
CoaxialCable.outer.radius        = 0.75
CoaxialCable.outer.live          = true

CoaxialCable.inner.on            = true
CoaxialCable.inner.radius        = 0.25
CoaxialCable.inner.live          = false

CoaxialCable.dielectric.on       = false
CoaxialCable.dielectric.radius   = 0.5
CoaxialCable.dielectric.eps      = 4

# ====================================================================================================
# TracerParticleStepper class options
# ====================================================================================================
TracerParticleStepper.initial_particles = 10000  # Number of uniformly distributed initial particles
TracerParticleStepper.integration       = rk2    # 'euler', 'rk2', or 'rk4'
TracerParticleStepper.verbosity         = -1     # Verbosity level
TracerParticleStepper.cfl               = 1.0    # "CFL" number. 
TracerParticleStepper.velocity_field    = 1      # Velocity field to use.
                                                 # 0 => Diagonal translation
						 # 1 => Rotational flow