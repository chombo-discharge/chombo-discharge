# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
AmrMesh.lo_corner       = -1 -1 -1    # Low corner of problem domain
AmrMesh.hi_corner       =  1  1  1    # High corner of problem domain
AmrMesh.verbosity       = -1          # Controls verbosity. 
AmrMesh.coarsest_domain = 32 32 32    # Number of cells on coarsest domain
AmrMesh.max_amr_depth   = 1           # Maximum amr depth
AmrMesh.max_sim_depth   = -1          # Maximum simulation depth
AmrMesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
AmrMesh.fill_ratio      = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size     = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm  = br          # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting     = morton      # Morton sorting
AmrMesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
AmrMesh.max_box_size    = 16          # Maximum allowed box size
AmrMesh.max_ebis_box    = 16          # Maximum allowed box size
AmrMesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
AmrMesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
AmrMesh.num_ghost       = 3           # Number of ghost cells. Default is 3
AmrMesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 3           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
AmrMesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
Driver.verbosity                       = 2             # Engine verbosity
Driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
Driver.plot_interval                   = 5             # Plot interval
Driver.regrid_interval                 = 5             # Regrid interval
Driver.checkpoint_interval             = 5             # Checkpoint interval
Driver.initial_regrids                 = 0             # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.write_regrid_files              = false         # Write regrid files or not
Driver.write_restart_files             = false         # Write restart files or not
Driver.start_time                      = 0             # Start time (fresh simulations only)
Driver.stop_time                       = 1.0           # Stop time
Driver.max_steps                       = 100           # Maximum number of steps
Driver.geometry_only                   = false         # Special option that ONLY plots the geometry
Driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
Driver.write_memory                    = false         # Write MPI memory report
Driver.write_loads                     = false         # Write (accumulated) computational loads
Driver.output_directory                = ./            # Output directory
Driver.output_names                    = simulation    # Simulation output names
Driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
Driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
Driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true          # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 30.              # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry

# ====================================================================================================
# EDDINGTON_SP1 CLASS OPTIONS
# ====================================================================================================
EddingtonSP1.verbosity           = -1           # Solver verbosity
EddingtonSP1.stationary          = false      # Stationary solver
EddingtonSP1.reflectivity        = 0.        # Reflectivity
EddingtonSP1.use_tga             = false     # Use TGA for integration
EddingtonSP1.kappa_scale         = true      # Kappa scale source or not (depends on algorithm)
EddingtonSP1.plt_vars            = phi src   # Plot variables. Available are 'phi' and 'src'
EddingtonSP1.use_regrid_slopes   = true         # Slopes on/off when regridding
EddingtonSP1.gmg_verbosity       = -10       # GMG verbosity
EddingtonSP1.gmg_pre_smooth      = 8         # Number of relaxations in downsweep
EddingtonSP1.gmg_post_smooth     = 8         # Number of relaxations in upsweep
EddingtonSP1.gmg_bott_smooth     = 8         # NUmber of relaxations before dropping to bottom solver
EddingtonSP1.gmg_min_iter        = 5         # Minimum number of iterations
EddingtonSP1.gmg_max_iter        = 32        # Maximum number of iterations
EddingtonSP1.gmg_exit_tol        = 1.E-6     # Residue tolerance
EddingtonSP1.gmg_exit_hang       = 0.2       # Solver hang
EddingtonSP1.gmg_min_cells       = 2         # Bottom drop
EddingtonSP1.gmg_bottom_solver   = bicgstab     # Bottom solver type. Valid options are 'simple <number>' and 'bicgstab'
EddingtonSP1.gmg_cycle           = vcycle    # Cycle type. Only 'vcycle' supported for now
EddingtonSP1.gmg_ebbc_weight     = 2            # EBBC weight (only for Dirichlet)
EddingtonSP1.gmg_ebbc_order      = 2            # EBBC order (only for Dirichlet)
EddingtonSP1.gmg_smoother        = red_black    # Relaxation type. 'jacobi', 'red_black', or 'multi_color'
EddingtonSP1.ebbc                = larsen 0.0     # Bc on embedded boundaries. 
EddingtonSP1.bc.x.lo             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'
EddingtonSP1.bc.x.hi             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'              
EddingtonSP1.bc.y.lo             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'
EddingtonSP1.bc.y.hi             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'
EddingtonSP1.bc.z.lo             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'
EddingtonSP1.bc.z.hi             = larsen 0.0     # Boundary on domain. 'neumann' or 'larsen'

# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1 -1 -0.1         # Remove irregular cell tags 
GeoCoarsener.box1_hi     =  1 1 2         # between these two corners
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
RodDielectric.electrode.on              = false         # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0 0         # One endpoint
RodDielectric.electrode.endpoint2       = 0 0 2         # Other endpoint
RodDielectric.electrode.radius          = 0.1           # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = true          # Use dielectric or not
RodDielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 0         # Sphere center
RodDielectric.sphere.radius             = 0.15          # Radius

# ====================================================================================================
# RadiativeTransferStepper class options
# ====================================================================================================
RadiativeTransferStepper.verbosity      = -1      # Verbosity
RadiativeTransferStepper.realm          = primal  # Realm 
RadiativeTransferStepper.kappa          = 0.1     # Inverse absorption coefficient
RadiativeTransferStepper.dt             = 1.E-10  # Time step
RadiativeTransferStepper.blob_amplitude = 1E2     # Blob amplitude
RadiativeTransferStepper.blob_radius    = 0.05    # Blob radius
RadiativeTransferStepper.blob_center    = 0.5 0.5 0.5 # Blob center
