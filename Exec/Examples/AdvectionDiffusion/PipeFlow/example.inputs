# ====================================================================================================
# AmrMesh class options
# ====================================================================================================
AmrMesh.lo_corner        = -1 -1 -1    # Low corner of problem domain
AmrMesh.hi_corner        =  1  1  1    # High corner of problem domain
AmrMesh.verbosity        = -1          # Controls verbosity. 
AmrMesh.coarsest_domain  = 64 64 64    # Number of cells on coarsest domain
AmrMesh.max_amr_depth    = 2           # Maximum amr depth
AmrMesh.max_sim_depth    = -1          # Maximum simulation depth
AmrMesh.fill_ratio       = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size      = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm   = br          # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting      = morton      # 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor  = 16          # Blocking factor. 
AmrMesh.max_box_size     = 16          # Maximum allowed box size
AmrMesh.max_ebis_box     = 16          # Maximum allowed box size for EBIS generation. 
AmrMesh.ref_rat          = 2 2 2 2 2 2 # Refinement ratios (mixed ratios are allowed). 
AmrMesh.num_ghost        = 2           # Number of ghost cells. 
AmrMesh.lsf_ghost        = 2           # Number of ghost cells when writing level-set to grid
AmrMesh.eb_ghost         = 4           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 2           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten    = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten          = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius    = 1           # Redistribution radius for hyperbolic conservation laws


# ====================================================================================================
# Driver class options
# ====================================================================================================
Driver.verbosity                       = 2                # Engine verbosity
Driver.geometry_generation             = chombo-discharge # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0                # Geometry scan level for chombo-discharge geometry generator
Driver.ebis_memory_load_balance        = false            # If using Chombo geo-gen, use memory as loads for EBIS generation  
Driver.plot_interval                   = 10               # Plot interval
Driver.checkpoint_interval             = 100              # Checkpoint interval
Driver.regrid_interval                 = 10               # Regrid interval
Driver.write_regrid_files              = false            # Write regrid files or not.
Driver.write_restart_files             = false            # Write restart files or not
Driver.initial_regrids                 = 4                # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0                # Start time (fresh simulations only)
Driver.stop_time                       = 1.0              # Stop time
Driver.max_steps                       = 100              # Maximum number of steps
Driver.geometry_only                   = false            # Special option that ONLY plots the geometry
Driver.write_memory                    = false            # Write MPI memory report
Driver.write_loads                     = false            # Write (accumulated) computational loads
Driver.output_directory                = ./               # Output directory
Driver.output_names                    = simulation       # Simulation output names
Driver.max_plot_depth                  = -1               # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1               # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1                # Number of ghost cells to include in plots
Driver.plt_vars                        = 0                # 'tags', 'mpi_rank', 'levelset'
Driver.restart                         = 0                # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true             # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 15.              # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0                # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0                # Refine dielectric surfaces. -1 => equal to refine_geometry


# ====================================================================================================
# CdrCTU solver settings. 
# ====================================================================================================
CdrCTU.seed                 = -1                      # Seed. Random seed with seed < 0
CdrCTU.bc.x.lo              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.x.hi              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.y.lo              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.y.hi              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.z.lo              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.z.hi              = wall                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.slope_limiter        = minmod                  # Slope limiter. 'none', 'minmod', 'mc', or 'superbee'
CdrCTU.use_ctu              = true                    # If true, use CTU. Otherwise it's DTU.
CdrCTU.plt_vars             = phi vel src dco ebflux  # Plot variables. Options are 'phi', 'vel', 'dco', 'src'
CdrCTU.plot_mode            = density                 # Plot densities 'density' or particle numbers ('numbers')
CdrCTU.blend_conservation   = true                    # Turn on/off blending with nonconservative divergenceo
CdrCTU.which_redistribution = volume                  # Redistribution type. 'volume', 'mass', or 'none' (turned off)
CdrCTU.use_regrid_slopes    = true                    # Turn on/off slopes when regridding
CdrCTU.gmg_verbosity        = -1                      # GMG verbosity
CdrCTU.gmg_pre_smooth       = 12                      # Number of relaxations in GMG downsweep
CdrCTU.gmg_post_smooth      = 12                      # Number of relaxations in upsweep
CdrCTU.gmg_bott_smooth      = 12                      # NUmber of relaxations before dropping to bottom solver
CdrCTU.gmg_min_iter         = 5                       # Minimum number of iterations
CdrCTU.gmg_max_iter         = 32                      # Maximum number of iterations
CdrCTU.gmg_exit_tol         = 1.E-10                  # Residue tolerance
CdrCTU.gmg_exit_hang        = 0.2                     # Solver hang
CdrCTU.gmg_min_cells        = 16                      # Bottom drop
CdrCTU.gmg_bottom_solver    = bicgstab                # Bottom solver type. Valid options are 'simple' and 'bicgstab'
CdrCTU.gmg_cycle            = vcycle                  # Cycle type. Only 'vcycle' supported for now
CdrCTU.gmg_smoother         = red_black               # Relaxation type. 'jacobi', 'multi_color', or 'red_black'


# ====================================================================================================
# GeoCoarsener class options
# ====================================================================================================
GeoCoarsener.num_boxes   = 0            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = 0.0 0.0 0.0  # Remove irregular cell tags 
GeoCoarsener.box1_hi     = 0.0 0.0 0.0  # between these two corners
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# CoaxialCable geometry class options
#
# This is a coaxial cable class with outer and inner electrodes, and a dielectric.
# Use CoaxialCable.endpoint1(2) to specify endpoints. Only endpoint1 is used in 2D. 
# ====================================================================================================
CoaxialCable.endpoint1           =  0 0 -10  # One endpopint
CoaxialCable.endpoint2           =  0 0  10  # Other endpoint

CoaxialCable.outer.on            = true
CoaxialCable.outer.radius        = 0.25
CoaxialCable.outer.live          = true

CoaxialCable.inner.on            = false
CoaxialCable.inner.radius        = 0.25
CoaxialCable.inner.live          = false

CoaxialCable.dielectric.on       = false
CoaxialCable.dielectric.radius   = 0.5
CoaxialCable.dielectric.eps      = 4


# ====================================================================================================
# Cylinder geometry class options
# ====================================================================================================
Cylinder.turn_off      = false          # Turn on/off geometry
Cylinder.fluid_outside = false          # Solution region on inside/outside
Cylinder.material      = electrode      # Material type. 'dielectric' or 'electrode'
Cylinder.live          = true           # If electrode, this sets the live/grounded voltage
Cylinder.permittivity  = 4              # If dielectric, this sets the permittivity
Cylinder.z_coord       = 0.0            # z-coordinate if doing 2D
Cylinder.center1       = -10 -10 0      # One endpoint. Must have 3 entries
Cylinder.center2       =  10  10 0      # Other endpoint. Must have 3 entries. 
Cylinder.radius        = 0.25           # Cylinder radius. 

# ====================================================================================================
# AdvectionDiffusionStepper class options
# ====================================================================================================
AdvectionDiffusion.verbosity      = -1      # Verbosity
AdvectionDiffusion.diffusion      = true    # Turn on/off diffusion
AdvectionDiffusion.advection      = true    # Turn on/off advection
AdvectionDiffusion.integrator     = imex    # 'heun' or 'imex'

# Default velocity, diffusion, and initial data
# ---------------------------------------------
AdvectionDiffusion.blob_amplitude = 1.0     # Blob amplitude
AdvectionDiffusion.blob_radius    = 0.1     # Blob radius
AdvectionDiffusion.blob_center    = -0.5 -0.5 0     # Blob center
AdvectionDiffusion.omega          = 1.0     # Rotation velocity	
AdvectionDiffusion.diffco         = 1.E-1   # Diffusion coefficient

# Time step settings
# ------------------
AdvectionDiffusion.cfl            = 0.5     # CFL number
AdvectionDiffusion.min_dt         = 0.0     # Smallest acceptable time step
AdvectionDiffusion.max_dt         = 1.E99   # Largest acceptable time step

# Cell tagging controls
# ---------------------
AdvectionDiffusion.refine_curv = 0.1        # Refine if curvature exceeds this
AdvectionDiffusion.refine_magn = 1E-2       # Only tag if magnitude eceeds this
AdvectionDiffusion.buffer      = 0          # Grow tagged cells     


