{
    "gas" : {
	// Definition of the background gas. This must contain "background species" and "law".
	"background species" : [
	    // Definition of background species. This is an array of species with specified molar fractions. Species names
	    // can not contain wildcards (@)
	    {
		"O2" : {
		    "molar fraction" : {
			"type" : "constant", // Specification of how we compute the molar fraction
			"value" : 0.2        // Specification what the molar fraction actually is
		    },
		    "plot" : true            // Specify that we plot the species' molar fraction
		}
	    },
	    {
		"N2" : {
		    "molar fraction" : {
			"type" : "table vs height",       // Specify table vs height
			"file" : "N2_molar_fraction.dat", // File name containing molar fraction
			"axis" : "y",                     // Axis which represents the "height"
			"height column" : 0,              // Optional specification of column containing the height data (defaults to 0)
			"molar fraction column" : 1,      // Optional specification of column containing the height data (defaults to 1)
			"height scale" : 1.0,             // Optional scaling of height column
			"fraction scale" : 1.0,           // Optional scaling of molar fraction column
			"min height" : 0.0,               // Optional truncation of minimum height kept in internal table (occurs after scaling)
			"max height" : 2.0,               // Optional truncation of maximum height kept in internal table (occurs after scaling)
			"num points" : 100,               // Optional specification of number of data points kept in internal table (defaults to 1000)
			"spacing" : "linear",             // Optional specification of table representation. Can be 'linear' or 'exponential' (defaults to linear)
			"dump" : "debug_N2_fraction.dat"  // Optional debugging hook for dumping table to file (defaults to false)
		    },
		    "plot" : false
		}
	    }
	],
	// Specify which gas law we use. The user can define multiple gas laws and then specify which one to use.
	"law" : {
	    "id" : "my_ideal_gas", // Specify which gas law we use.
	    "plot" : true,         // Turn on/off plotting.
	    "my_ideal_gas" : {
		// Definition for an ideal gas law. Temperature is always in Kevlin the pressure is in bar. The neutral density
		// is derived using an ideal gas law.
		"type" : "ideal",
		"temperature" : 300,
		"pressure" : 1.0
	    },
	    "tabulated atmosphere" : {
		// Tabulated gas law. The user must supply a file containing the pressure, temperature and number density and
		// specify the table resolution that will be used internally.
		"type" : "table vs height",       // Specify that our gas law contains table-vs-height data
		"file" : "ENMSIS_Atmosphere.dat", // File name
		"axis" : "y",                     // Associated Cartesian axis for the "height"
		"temperature column" : 0,         // Column containing the temperature
		"pressure column" : 1,            // Column containing the pressure
		"density column" : 2,             // Column containing the number density
		"min height" : 0.0,               // Minium height kept when resampling the table
		"max height" : 250000,            // Maximum height kept when resampling the table
		"res height" : 500,               // Table resolution
		"dump tables" : true,             // Optional argument for dumping tables to disk (useful for debugging)
		"T scale" : 1.0,                  // Optional argument for user-specified temperature data scaling.
		"P scale" : 1.0,                  // Optional argument for user-specified pressure data scaling.
		"Rho scale" : 1.0                 // Optional argument for user-specified density data scaling.
	    }
	}
    },
    "alpha": {
	// Definition of the alpha coefficient. This can be done by specifying the 'type' field
	// as 'constant' or 'table alpha/N vs E/N'. If you use 'constant', then only the 'value' field is required
	// for complete Tabulated coefficients are bit more involved, and are fully specified below. Note that
	// if do not specify the "header" field, then the full file is read in (ignoring any # comments). If you
	// read from e.g. BOLSIG+ outputs, then you will probably need to include the header to ensure you obtain
	// data from the correct place in the file.
	"type" : "table vs E/N",                                   // Specify that we read in alpha/N vs E/N
	"file" : "bolsig_air.dat",                                 // File containing the data
	"header" : "E/N (Td)\tTownsend ioniz. coef. alpha/N (m2)", // Optional argument. Contains line immediately preceding the data to be read.
	"E/N column" : 0,                                          // Optional specification of column containing E/N (defaults to 0)
	"alpha/N column" : 1,                                      // Optional specification of column containing alpha/N (defaults to 1)
	"min E/N" : 1.0,                                           // Optional truncation of minium E/N kept when resampling the table (occurs after scaling)
	"max E/N" : 1000.0,                                        // Optional truncation of maximum E/N kept when resampling the table (happens after scaling)
	"num points" : 1000,                                       // Optional number of points kept when resamplnig the table (defaults to 1000)
	"spacing" : "exponential",                                 // Optional spcification of table representation. Defaults to 'exponential' but can also be 'linear'
	"scale E/N" : 1.0,                                         // Optional scaling of the column containing E/N
	"scale alpha/N" : 1.0,                                     // Optional scaling
	"dump" : "debug_alpha.dat"                                 // Optional dump of internalized table to file. Useful for debugging.
    },
    "eta" : {
	// Definition of the Townsend attachment coefficient. Follows the same terminology as the Townsend ionization coefficient.
	"type" : "table vs E/N",                                  // Specify that we read in alpha/N vs E/N
	"file" : "bolsig_air.dat",                                // File containing the data
	"header" : "E/N (Td)\tTownsend attach. coef. eta/N (m2)", // Optional argument. Contains the line immediately preceding the data to be read.
	"E/N column" : 0,                                         // Optional specification of column containing E/N (defaults to 0)
	"eta/N column" : 1,                                       // Optional specification of column containing eta/N (defaults to 1)
	"min E/N" : 1.0,                                          // Optional truncation of minium E/N kept when resampling the table (occurs after scaling)
	"max E/N" : 1000.0,                                       // Optional truncation of maximum E/N kept when resampling the table (happens after scaling)
	"num points" : 1000,                                      // Optional number of points kept when resamplnig the table (defaults to 1000)
	"spacing" : "exponential",                                // Optional spcification of table representation. Defaults to 'exponential' but can also be 'linear'
	"scale E/N" : 1.0,                                        // Optional scaling of the column containing E/N
	"scale eta/N" : 1.0,                                      // Optional scaling
	"dump" : "debug_eta.dat"                                  // Optional dump of internalized table to file. Useful for debugging.
    },
    "plasma species" :
    [
	// List of plasma species that are tracked. This is an array of species
	// with various identifiers, some of which are always required (id, Z, type, mobile, diffusive) and
	// others which are secondary requirements.
	{
            "e" : {
		"Z" : -1,           // Charge number
		"solver" : "ito",   // Solver type. Either 'ito' or 'cdr'
		"mobile" : true,    // Mobile or not
		"diffusive" : true, // Diffusive or not
		"mobility" : {
		    // Specification of the mobilility coefficient when the species is mobile. User can specify various forms of the mobility. E.g. constant, function-based, or
		    // tabulated vs E/N
		    "lookup" : "table E/N",                       // Specification of tabulated mobility lookup method
		    "file" : "bolsig_air.dat",                    // File containg the mobility data
		    "header" : "E/N (Td)\tMobility *N (1/m/V/s)", // Line immediately preceding the colum data
		    "E/N" : 0,                                    // Column containing E/N
		    "mu*N" : 1,                                   // Column containing mu*N
		    "min E/N" : 10,                               // Minimum E/N kept when resampling table
		    "max E/N" : 2E6,                              // Maximum E/N kept when resampling table
		    "points" : 1000,                              // Number of grid points kept when resampling the table
		    "spacing" : "exponential",                    // Grid point spacing when resampling the table
		    "E/N scale" : 1.0,                            // Optional argument for scaling mobility coefficient
		    "mu scale" : 1.0,                             // Optional argument for scaling the E/N column
		    "dump" : "debug_mobility.dat" // Optional argument for dumping table to disk (useful for debugging)
		},
		"diffusion" : {
		    // Definition of the diffusion coefficient similiar to mobility coefficient above.
		    "lookup" : "table E/N",
		    "file" : "bolsig_air.dat",
		    "header" : "E/N (Td)\tDiffusion coefficient *N (1/m/s)",
		    "E/N" : 0,
		    "D*N" : 1,
		    "min E/N" : 10,
		    "max E/N" : 2E6,
		    "spacing" : "exponential",
		    "points" : 1000
		},
		"initial particles" : [
		    {
			"single particle" : {
			    "position" : [ 0, 0, 0 ],
			    "weight" : 1}
		    },
		    {
			"uniform distribution" : {
			    "low corner" : [ -0.04, 0, 0 ],
			    "high corner" : [ 0.04, 0.04, 0 ],
			    "num particles": 1000,
			    "weight" : 1}
		    },
		    {
			"sphere distribution" : {
			    "center" : [ 0, 0, 0 ],
			    "radius" : 1.0,
			    "num particles": 0,
			    "weight" : 1}
		    },
		    {
			"gaussian distribution" : {
			    "center" : [ 0, 0, 0 ],
			    "radius" : 1.0,
			    "num particles": 100,
			    "weight" : 1
			}
		    },
		    {
			"list": {
			    "file": "initial_particles.dat", // File containing the particles
			    "x column": 0, // Optional specification of column containing x coordinate (defaults to 0)
			    "y column": 1,  // Optional specification of column containing y coordinate (defaults to 1)
			    "z column": 2, // Optional specification of column containing z coordinate (defaults to 2)
			    "w column": 3 // Optional specification of column containing the particle weight (defaults to 3)
			}
		    }
		]
            }
	},
	{
            "M+" : {
		// Definition of another plasma species (M+), which are tracked using a CDR solver
		"Z" : 1,            // Charge number
		"solver" : "cdr",   // Solver type. Either 'ito' or 'cdr'
		"mobile" : false,   // Mobile or not
		"diffusive" : false// Diffusive or not,
            }
	}
    ]
}
