# ====================================================================================================
# Voltage curve
# ====================================================================================================
RedSprite.voltage   = 1
RedSprite.basename  = pout

# ====================================================================================================
# AmrMesh class options
# ====================================================================================================
AmrMesh.lo_corner        = -200E3 0E3   # Low corner of problem domain
AmrMesh.hi_corner        =  200E3 200E3 # High corner of problem domain
AmrMesh.verbosity        = -1          # Controls verbosity. 
AmrMesh.coarsest_domain  = 128 64      # Number of cells on coarsest domain
AmrMesh.max_amr_depth    = 10          # Maximum amr depth
AmrMesh.max_sim_depth    = -1          # Maximum simulation depth
AmrMesh.fill_ratio       = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size      = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm   = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting      = morton      # 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor  = 16          # Blocking factor. 
AmrMesh.max_box_size     = 16          # Maximum allowed box size
AmrMesh.max_ebis_box     = 16          # Maximum allowed box size for EBIS generation. 
AmrMesh.ref_rat          = 2 2 2 2 2 2 # Refinement ratios (mixed ratios are allowed). 
AmrMesh.num_ghost        = 2           # Number of ghost cells. 
AmrMesh.lsf_ghost        = 2           # Number of ghost cells when writing level-set to grid
AmrMesh.eb_ghost         = 2           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 2           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten    = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten          = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius    = 1           # Redistribution radius for hyperbolic conservation laws


# ====================================================================================================
# Driver class options
# ====================================================================================================
Driver.verbosity                       = 2                # Engine verbosity
Driver.geometry_generation             = chombo-discharge # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0                # Geometry scan level for chombo-discharge geometry generator
Driver.ebis_memory_load_balance        = false            # If using Chombo geo-gen, use memory as loads for EBIS generation  
Driver.plot_interval                   = 10               # Plot interval
Driver.checkpoint_interval             = 100              # Checkpoint interval
Driver.regrid_interval                 = 5                # Regrid interval
Driver.write_regrid_files              = false            # Write regrid files or not.
Driver.write_restart_files             = false            # Write restart files or not
Driver.initial_regrids                 = 3                # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0                # Start time (fresh simulations only)
Driver.stop_time                       = 50E-3            # Stop time
Driver.max_steps                       = 10000            # Maximum number of steps
Driver.geometry_only                   = false            # Special option that ONLY plots the geometry
Driver.write_memory                    = false            # Write MPI memory report
Driver.write_loads                     = false            # Write (accumulated) computational loads
Driver.output_directory                = ./               # Output directory
Driver.output_names                    = sprite           # Simulation output names
Driver.max_plot_depth                  = -1               # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1               # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1                # Number of ghost cells to include in plots
Driver.plt_vars                        = none             # 'tags', 'mpi_rank', 'levelset'
Driver.restart                         = 0                # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true             # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 15.              # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0                # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0                # Refine dielectric surfaces. -1 => equal to refine_geometry


# ====================================================================================================
# FieldSolverMultigrid class options
# ====================================================================================================
FieldSolverMultigrid.verbosity         = -1                # Class verbosity
FieldSolverMultigrid.jump_bc           = natural           # Jump BC type ('natural' or 'saturation_charge')
FieldSolverMultigrid.bc.x.lo           = neumann   0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.x.hi           = neumann   0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.y.lo           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.y.hi           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.plt_vars          = phi rho E         # Plot variables: 'phi', 'rho', 'E', 'res', 'perm', 'sigma'
FieldSolverMultigrid.kappa_source      = true              # Volume weighted space charge density or not (depends on algorithm)
FieldSolverMultigrid.filter            = 0                 # Number of filterings after Poisson solve
FieldSolverMultigrid.use_regrid_slopes = true

FieldSolverMultigrid.gmg_verbosity     = 10                # GMG verbosity
FieldSolverMultigrid.gmg_pre_smooth    = 32                # Number of relaxations in downsweep
FieldSolverMultigrid.gmg_post_smooth   = 32                # Number of relaxations in upsweep
FieldSolverMultigrid.gmg_bott_smooth   = 32                # Number of at bottom level (before dropping to bottom solver)
FieldSolverMultigrid.gmg_min_iter      = 5                 # Minimum number of iterations
FieldSolverMultigrid.gmg_max_iter      = 32                # Maximum number of iterations
FieldSolverMultigrid.gmg_exit_tol      = 1.E-10            # Residue tolerance
FieldSolverMultigrid.gmg_exit_hang     = 0.2               # Solver hang
FieldSolverMultigrid.gmg_min_cells     = 16                 # Bottom drop
FieldSolverMultigrid.gmg_drop_order    = 0                 # Bottom drop
FieldSolverMultigrid.gmg_bc_order      = 2                 # Boundary condition order for multigrid
FieldSolverMultigrid.gmg_bc_weight     = 2                 # Boundary condition weights (for least squares)
FieldSolverMultigrid.gmg_jump_order    = 2                 # Boundary condition order for jump conditions
FieldSolverMultigrid.gmg_jump_weight   = 2                 # Boundary condition weight for jump conditions (for least squares)
FieldSolverMultigrid.gmg_bottom_solver = bicgstab          # Bottom solver type. 'simple', 'bicgstab', or 'gmres'
FieldSolverMultigrid.gmg_cycle         = vcycle            # Cycle type. Only 'vcycle' supported for now. 
FieldSolverMultigrid.gmg_smoother      = red_black         # Relaxation type. 'jacobi', 'multi_color', or 'red_black'


# ====================================================================================================
# CdrCTU solver settings. 
# ====================================================================================================
CdrCTU.bc.x.lo              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.x.hi              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.y.lo              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.y.hi              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.z.lo              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.bc.z.hi              = data                    # 'data', 'function', 'wall', 'outflow', or 'solver'
CdrCTU.slope_limiter        = minmod                  # Slope limiter. 'none', 'minmod', 'mc', or 'superbee'
CdrCTU.use_ctu              = true                    # If true, use CTU. Otherwise it's DTU.
CdrCTU.plt_vars             = phi vel src dco ebflux  # Plot variables. Options are 'phi', 'vel', 'dco', 'src'
CdrCTU.plot_mode            = density                 # Plot densities 'density' or particle numbers ('numbers')
CdrCTU.blend_conservation   = true                    # Turn on/off blending with nonconservative divergenceo
CdrCTU.which_redistribution = volume                  # Redistribution type. 'volume', 'mass', or 'none' (turned off)
CdrCTU.use_regrid_slopes    = true                    # Turn on/off slopes when regridding
CdrCTU.gmg_verbosity        = -1                      # GMG verbosity
CdrCTU.gmg_pre_smooth       = 12                      # Number of relaxations in GMG downsweep
CdrCTU.gmg_post_smooth      = 12                      # Number of relaxations in upsweep
CdrCTU.gmg_bott_smooth      = 12                      # NUmber of relaxations before dropping to bottom solver
CdrCTU.gmg_min_iter         = 5                       # Minimum number of iterations
CdrCTU.gmg_max_iter         = 32                      # Maximum number of iterations
CdrCTU.gmg_exit_tol         = 1.E-10                  # Residue tolerance
CdrCTU.gmg_exit_hang        = 0.2                     # Solver hang
CdrCTU.gmg_min_cells        = 16                      # Bottom drop
CdrCTU.gmg_bottom_solver    = bicgstab                # Bottom solver type. Valid options are 'simple' and 'bicgstab'
CdrCTU.gmg_cycle            = vcycle                  # Cycle type. Only 'vcycle' supported for now
CdrCTU.gmg_smoother         = red_black               # Relaxation type. 'jacobi', 'multi_color', or 'red_black'


# ====================================================================================================
# McPhoto class options
# ====================================================================================================
McPhoto.verbosity          = -1            # Solver verbosity.
McPhoto.instantaneous      = true          # Instantaneous transport or not
McPhoto.max_photons_per_cell        = 16           # Maximum no. generated in a cell (< = 0 yields physical photons)
McPhoto.num_sampling_packets = 1 ## Number of sub-sampling packets for max_photons_per_cell
McPhoto.blend_conservation = false         # Switch for blending with the nonconservative divergence
McPhoto.transparent_eb     = false         # Turn on/off transparent boundaries. Only for instantaneous=true
McPhoto.pvr_buffer         = 0             # Buffer for PVR. 
McPhoto.halo_buffer        = 1             # Halo region for particles. 
McPhoto.random_kappa       = true          # Randomize absorption length (taken from Photon implementation)
McPhoto.plt_vars           = phi src phot  # Available are 'phi' and 'src', 'phot', 'eb_phot', 'dom_phot', 'bulk_phot', 'src_phot'
McPhoto.plot_deposition    = cic           # Cloud-in-cell for plotting particles. 
McPhoto.intersection_alg   = bisection     # EB intersection algorithm. Supported are: 'raycast' 'bisection'
McPhoto.bisect_step        = 1.E10         # Bisection step length for intersection tests
McPhoto.seed               = 0             # Seed for RNG
McPhoto.bc_x_low           = outflow       # Boundary condition. 'outflow', 'symmetry', or 'wall'
McPhoto.bc_x_high          = outflow       # Boundary condition
McPhoto.bc_y_low           = outflow       # Boundary condition
McPhoto.bc_y_high          = outflow       # Boundary condition
McPhoto.bc_z_low           = outflow       # Boundary condition
McPhoto.bc_z_high          = outflow       # Boundary condition
McPhoto.poiss_exp_swap     = 100           # Swap out Poisson with exponential distribution above this mean
McPhoto.photon_generation  = stochastic    # Volumetric source term. 'deterministic' or 'stochastic'
McPhoto.source_type        = volume_rate   # 'number'      = Source term contains the number of photons produced
                                           # 'volume'      = Source terms contains the number of photons produced per unit volume
                                           # 'volume_rate' = Source terms contains the volumetric rate
                                           # 'rate'        = Source terms contains the rate
McPhoto.deposition_cf = halo   
McPhoto.deposition         = cic           # 'ngp'  = nearest grid point
                                           # 'num'  = # of photons per cell
                                           # 'cic'  = cloud-in-cell
                                           # 'tsc'  = triangle-shaped-cloud
                                           # 'w4'   = 3rd order interpolation

# ====================================================================================================
# SurfaceODESolver solver settings. 
# ====================================================================================================
SurfaceODESolver.verbosity = -1                # Chattiness
SurfaceODESolver.regrid    = conservative      # Regrid method. 'conservative' or 'arithmetic'
SurfaceODESolver.plt_vars  = phi               # Plot variables. Valid arguments are 'phi' and 'rhs'




# ====================================================================================================
# GeoCoarsener class options
# ====================================================================================================
GeoCoarsener.num_boxes   = 0            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1E6 70E3
GeoCoarsener.box1_hi     =  1E6 1E6
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# CdrPlasmaGodunovStepper options
# ====================================================================================================
CdrPlasmaGodunovStepper.verbosity         = -1            # Class verbosity
CdrPlasmaGodunovStepper.solver_verbosity  = -1            # Individual solver verbosities
CdrPlasmaGodunovStepper.min_dt            = 0.            # Minimum permitted time step
CdrPlasmaGodunovStepper.max_dt            = 25E-6         # Maximum permitted time step
CdrPlasmaGodunovStepper.cfl               = 0.8	          # CFL number
CdrPlasmaGodunovStepper.use_regrid_slopes = true          # Use slopes when regridding (or not)
CdrPlasmaGodunovStepper.field_coupling    = semi_implicit # Field coupling. 'explicit' or 'semi_implicit'
CdrPlasmaGodunovStepper.advection         = muscl         # Advection algorithm. 'euler', 'rk2', or 'muscl'
CdrPlasmaGodunovStepper.diffusion         = explicit      # Diffusion. 'explicit', 'implicit', or 'auto'. 
CdrPlasmaGodunovStepper.diffusion_thresh  = 1.2           # Diffusion threshold. If dtD/dtA > this then we use implicit diffusion.
CdrPlasmaGodunovStepper.diffusion_order   = 2             # Diffusion order. 
CdrPlasmaGodunovStepper.relax_time        = 1.E99          # Relaxation time. 100 <= is usually a "safe" choice. 
CdrPlasmaGodunovStepper.fast_poisson      = 1             # Solve Poisson every this time steps. Mostly for debugging.
CdrPlasmaGodunovStepper.fast_rte          = 1             # Solve RTE every this time steps. Mostly for debugging.
CdrPlasmaGodunovStepper.fhd               = false         # Set to true if you want to add a stochastic diffusion flux
CdrPlasmaGodunovStepper.source_comp       = interp        # Interpolated 'interp', 'interp2', or 'upwind X' for first species (X = integer).
CdrPlasmaGodunovStepper.floor_cdr         = true          # Floor CDR solvers to avoid negative densities
CdrPlasmaGodunovStepper.debug             = false         # Turn on debugging messages. Also monitors mass if it was injected into the system. 
CdrPlasmaGodunovStepper.profile           = true          # Turn on/off performance profiling.

# ====================================================================================================
# CdrPlasmaStreamerTagger class options
# ====================================================================================================
CdrPlasmaStreamerTagger.buffer            = 0		 # Refinement buffer
CdrPlasmaStreamerTagger.verbosity         = -1           # Verbosity
CdrPlasmaStreamerTagger.num_ref_boxes     = 1            # Manual refinement            
CdrPlasmaStreamerTagger.ref_box1_lo       = -100E3 70E3   # Between this corner
CdrPlasmaStreamerTagger.ref_box1_hi       = 100E3  85E3   # and this corner
CdrPlasmaStreamerTagger.ref_box1_lvl      = 4            # Refine to this level

CdrPlasmaStreamerTagger.refine_curvature  = 1.E99        # Curvature refinement
CdrPlasmaStreamerTagger.coarsen_curvature = 1.E99        # Curvature coarsening	
CdrPlasmaStreamerTagger.refine_alpha      = 1.0          # Set alpha refinement. Lower  => More mesh
CdrPlasmaStreamerTagger.coarsen_alpha     = 0.1          # Set alpha coarsening. Higher => Less mesh
CdrPlasmaStreamerTagger.max_coarsen_lvl   = 4            # Set max coarsening depth

# ====================================================================================================
# CdrPlasmaJSON class options
# ====================================================================================================
CdrPlasmaJSON.verbose          = false                 # Verbosity.
CdrPlasmaJSON.chemistry_file   = air_chemistry2d.json  # Chemistry input file
CdrPlasmaJSON.discrete_photons = false                 # Set to false but McPhoto settings set to stochastic
CdrPlasmaJSON.skip_reactions   = false                 # For debugging, turn on/off reactions
CdrPlasmaJSON.integrator       = explicit_trapezoidal  # Reaction network integrator
CdrPlasmaJSON.substeps         = 1                     # Substeps in the reaction integrator
CdrPlasmaJSON.chemistry_dt     = 1.E99                 # Time step to use for chemistry integration
