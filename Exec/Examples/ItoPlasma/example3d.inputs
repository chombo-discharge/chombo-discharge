# ====================================================================================================
# Voltage curve
# ====================================================================================================
ItoPlasma.potential = 30E3
ItoPlasma.basename  = pout

# ====================================================================================================
# AmrMesh class options
# ====================================================================================================
AmrMesh.lo_corner        = -5E-2 -5E-2 -5E-2 # Low corner of problem domain
AmrMesh.hi_corner        =  5E-2  5E-2 5E-2 # High corner of problem domain
AmrMesh.verbosity        = -1          # Controls verbosity. 
AmrMesh.coarsest_domain  = 32 32 32    # of cells on coarsest domain
AmrMesh.max_amr_depth    = 4           # Maximum amr depth
AmrMesh.max_sim_depth    = -1          # Maximum simulation depth
AmrMesh.fill_ratio       = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size      = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm   = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting      = morton      # 'none', 'shuffle', 'morton'
AmrMesh.blocking_factor  = 16          # Blocking factor. 
AmrMesh.max_box_size     = 16          # Maximum allowed box size
AmrMesh.max_ebis_box     = 16          # Maximum allowed box size for EBIS generation. 
AmrMesh.ref_rat          = 2 2 2 2 2 2 # Refinement ratios (mixed ratios are allowed). 
AmrMesh.num_ghost        = 2           # Number of ghost cells. 
AmrMesh.lsf_ghost        = 2           # Number of ghost cells when writing level-set to grid
AmrMesh.eb_ghost         = 2           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 2           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten    = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten          = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius    = 1           # Redistribution radius for hyperbolic conservation laws


# ====================================================================================================
# Driver class options
# ====================================================================================================
Driver.verbosity                       = 2                # Engine verbosity
Driver.geometry_generation             = chombo-discharge # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 2                # Geometry scan level for chombo-discharge geometry generator
Driver.ebis_memory_load_balance        = false            # If using Chombo geo-gen, use memory as loads for EBIS generation  
Driver.plot_interval                   = 10               # Plot interval
Driver.checkpoint_interval             = 10               # Checkpoint interval
Driver.regrid_interval                 = 10               # Regrid interval
Driver.write_regrid_files              = false            # Write regrid files or not.
Driver.write_restart_files             = false            # Write restart files or not
Driver.initial_regrids                 = 0                # Number of initial regrids
Driver.do_init_load_balance            = false            # If true, load balance the first step in a fresh simulation.
Driver.start_time                      = 0                # Start time (fresh simulations only)
Driver.stop_time                       = 1.0              # Stop time
Driver.max_steps                       = 100              # Maximum number of steps
Driver.geometry_only                   = false            # Special option that ONLY plots the geometry
Driver.write_memory                    = false            # Write MPI memory report
Driver.write_loads                     = false            # Write (accumulated) computational loads
Driver.output_directory                = ./               # Output directory
Driver.output_names                    = simulation       # Simulation output names
Driver.max_plot_depth                  = -1               # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1               # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1                # Number of ghost cells to include in plots
Driver.plt_vars                        = 0                # 'tags', 'mpi_rank', 'levelset'
Driver.restart                         = 0                # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true             # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_angles                   = 15.              # Refine cells if angle between elements exceed this value.
Driver.refine_electrodes               = 0                # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = 0                # Refine dielectric surfaces. -1 => equal to refine_geometry


# ====================================================================================================
# FieldSolverMultigrid class options
# ====================================================================================================
FieldSolverMultigrid.verbosity         = -1                # Class verbosity
FieldSolverMultigrid.jump_bc           = natural           # Jump BC type ('natural' or 'saturation_charge')
FieldSolverMultigrid.bc.x.lo           = neumann 0.0       # Bc type (see docs)
FieldSolverMultigrid.bc.x.hi           = neumann 0.0       # Bc type (see docs)
FieldSolverMultigrid.bc.y.lo           = neumann 0.0       # Bc type (see docs)
FieldSolverMultigrid.bc.y.hi           = neumann 0.0       # Bc type (see docs)
FieldSolverMultigrid.bc.z.lo           = dirichlet 0.0     # Bc type (see docs)
FieldSolverMultigrid.bc.z.hi           = dirichlet 1.0     # Bc type (see docs)
FieldSolverMultigrid.plt_vars          = phi rho E         # Plot variables: 'phi', 'rho', 'E', 'res', 'perm', 'sigma', 'Esol'
FieldSolverMultigrid.use_regrid_slopes = true              # Use slopes when regridding or not
FieldSolverMultigrid.kappa_source      = true              # Volume weighted space charge density or not (depends on algorithm)
FieldSolverMultigrid.filter            = 0                 # Number of filterings after Poisson solve

FieldSolverMultigrid.gmg_verbosity     = 10                # GMG verbosity
FieldSolverMultigrid.gmg_pre_smooth    = 16                # Number of relaxations in downsweep
FieldSolverMultigrid.gmg_post_smooth   = 16                # Number of relaxations in upsweep
FieldSolverMultigrid.gmg_bott_smooth   = 16                # Number of at bottom level (before dropping to bottom solver)
FieldSolverMultigrid.gmg_min_iter      = 5                 # Minimum number of iterations
FieldSolverMultigrid.gmg_max_iter      = 32                # Maximum number of iterations
FieldSolverMultigrid.gmg_exit_tol      = 1.E-10            # Residue tolerance
FieldSolverMultigrid.gmg_exit_hang     = 0.2               # Solver hang
FieldSolverMultigrid.gmg_min_cells     = 4                  # Bottom drop
FieldSolverMultigrid.gmg_drop_order    = 0                # Drop stencil order to 1 if domain is coarser than this.
FieldSolverMultigrid.gmg_bc_order      = 2                 # Boundary condition order for multigrid
FieldSolverMultigrid.gmg_bc_weight     = 2                 # Boundary condition weights (for least squares)
FieldSolverMultigrid.gmg_jump_order    = 2                 # Boundary condition order for jump conditions
FieldSolverMultigrid.gmg_jump_weight   = 2                 # Boundary condition weight for jump conditions (for least squares)
FieldSolverMultigrid.gmg_bottom_solver = simple 512        # Bottom solver type. 'simple', 'bicgstab', or 'gmres'
FieldSolverMultigrid.gmg_cycle         = vcycle            # Cycle type. Only 'vcycle' supported for now. 
FieldSolverMultigrid.gmg_smoother      = red_black         # Relaxation type. 'jacobi', 'multi_color', or 'red_black'


# ====================================================================================================
# ItoSolver class options
# ====================================================================================================
ItoSolver.verbosity           = -1            # Class verbosity
ItoSolver.plt_vars            = phi vel dco   # 'phi', 'vel', 'dco', 'part', 'eb_part', 'dom_part', 'src_part', 'energy_density', 'energy'
ItoSolver.bisect_step         = 1.E-4         # Bisection step length for intersection tests
ItoSolver.normal_max          = 5.0           # Maximum value (absolute) that can be drawn from the exponential distribution.
ItoSolver.redistribute        = false          # Turn on/off redistribution. 
ItoSolver.blend_conservation  = false         # Turn on/off blending with nonconservative divergenceo
ItoSolver.checkpointing       = particles     # 'particles' or 'numbers'
ItoSolver.ppc_restart         = 32            # Maximum number of computational particles to generate for restarts.
ItoSolver.irr_ngp_deposition  = false         # Force irregular deposition in cut cells or not
ItoSolver.irr_ngp_interp      = true          # Force irregular interpolation in cut cells or not
ItoSolver.mobility_interp     = direct        # How to interpolate mobility, 'direct' or 'velocity', i.e. either mu_p = mu(X_p) or mu_p = (mu*E)(X_p)/E(X_p)
ItoSolver.plot_deposition     = cic           # Cloud-in-cell for plotting particles.
ItoSolver.deposition          = cic           # Deposition type. 
ItoSolver.deposition_cf       = halo          # Coarse-fine deposition. interp, halo, or halo_ngp


# ====================================================================================================
# McPhoto class options
# ====================================================================================================
McPhoto.verbosity          = -1            # Solver verbosity
McPhoto.instantaneous      = true          # Instantaneous transport or not
McPhoto.max_photons        = 1             # Maximum no. generated in a cell (< = 0 yields physical photons)
McPhoto.blend_conservation = false         # Switch for blending with the nonconservative divergence
McPhoto.random_kappa       = true          # Randomize absorption length (taken from Photon implementation)
McPhoto.plt_vars           = phi src phot  # Available are 'phi' and 'src', 'phot', 'eb_phot', 'dom_phot', 'bulk_phot', 'src_phot'
McPhoto.plot_deposition    = cic           # Cloud-in-cell for plotting particles. 
McPhoto.intersection_alg   = bisection     # EB intersection algorithm. Supported are: 'raycast' 'bisection'
McPhoto.bisect_step        = 1.E-4         # Bisection step length for intersection tests
McPhoto.seed               = 0             # Seed for RNG
McPhoto.bc_x_low           = outflow       # Boundary condition. 'outflow', 'symmetry', or 'wall'
McPhoto.bc_x_high          = outflow       # Boundary condition
McPhoto.bc_y_low           = outflow       # Boundary condition
McPhoto.bc_y_high          = outflow       # Boundary condition
McPhoto.bc_z_low           = outflow       # Boundary condition
McPhoto.bc_z_high          = outflow       # Boundary condition
McPhoto.photon_generation  = deterministic # Volumetric source term. 'deterministic' or 'stochastic'
McPhoto.source_type        = number        # 'number'      = Source term contains the number of photons produced
                                           # 'volume'      = Source terms contains the number of photons produced per unit volume
                                           # 'volume_rate' = Source terms contains the volumetric rate
                                           # 'rate'        = Source terms contains the rate
McPhoto.deposition         = cic           # 'ngp'  = nearest grid point
McPhoto.deposition_cf      = halo          # Coarse-fine deposition. Must be interp or halo
                                           # 'num'  = # of photons per cell
                                           # 'cic'  = cloud-in-cell
                                           # 'tsc'  = triangle-shaped-cloud
                                           # 'w4'   = 3rd order interpolation

# ====================================================================================================
# SurfaceODESolver solver settings. 
# ====================================================================================================
SurfaceODESolver.verbosity = -1                # Chattiness
SurfaceODESolver.regrid    = conservative      # Regrid method. 'conservative' or 'arithmetic'
SurfaceODESolver.plt_vars  = phi               # Plot variables. Valid arguments are 'phi' and 'rhs'

# ====================================================================================================
# GeoCoarsener class options
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1.0 -1.0 500E-6 # Remove irregular cell tags 
GeoCoarsener.box1_hi     = 1.0 1.0 1.0  # between these two corners
GeoCoarsener.box1_lvl    = 3            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# RodDielectric geometry class options
# ====================================================================================================
RodDielectric.electrode.on              = true          # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0 0           # One endpoint
RodDielectric.electrode.endpoint2       = 0 0 1           # Other endpoint
RodDielectric.electrode.radius          = 500E-6        # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = false         # Use dielectric or not
RodDielectric.dielectric.shape          = perlin_box    # 'plane', 'box', 'perlin_box', 'sphere'
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for 'plane'
RodDielectric.plane.point               = 0 0 0         # Plane point
RodDielectric.plane.normal              = 0 0 1         # Plane normal vector (outward)

# Subsettings for 'box'
RodDielectric.box.lo_corner             = 0 0 0         # Low corner
RodDielectric.box.hi_corner             = 1 1 1         # Hi corner
RodDielectric.box.curvature             = 0.1

# Subsettings for 'perlin_box'
RodDielectric.perlin_box.point          = 0  0 -0.5     # Slab center-point (side with roughness)
RodDielectric.perlin_box.normal         = 0  0  1       # Slab normal
RodDielectric.perlin_box.curvature      = 0.1           # Slab rounding radius
RodDielectric.perlin_box.dimensions     = 1  1  1       # Slab dimensions
RodDielectric.perlin_box.noise_amp      = 0.1           # Noise amplitude
RodDielectric.perlin_box.noise_octaves  = 1             # Noise octaves
RodDielectric.perlin_box.noise_persist  = 0.5           # Octave persistence
RodDielectric.perlin_box.noise_freq     = 1 1 1         # Noise frequency
RodDielectric.perlin_box.noise_reseed   = false         # Reseed noise or not

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 0         # Low corner
RodDielectric.sphere.radius             = 0.5           # Radius

# ==================================================================================================== 
# ItoPlasmaGodunovStepper class options
# ====================================================================================================
ItoPlasmaGodunovStepper.checkpoint_particles    = false          # If true, regrid on restart is supported (otherwise it's not)
ItoPlasmaGodunovStepper.verbosity               = -1             # Verbosity
ItoPlasmaGodunovStepper.abort_on_failure        = true           # Abort on failure or not
ItoPlasmaGodunovStepper.profile                 = true           # Turn on/off run-time profiling
ItoPlasmaGodunovStepper.plt_vars                = none           # 'conductivity', 'current_density', 'particles_per_patch'
ItoPlasmaGodunovStepper.dual_grid               = true           # Turn on/off dual-grid functionality
ItoPlasmaGodunovStepper.load_balance_fluid      = false          # Turn on/off fluid realm load balancing. 
ItoPlasmaGodunovStepper.load_balance_particles  = true           # Turn on/off particle load balancing
ItoPlasmaGodunovStepper.load_indices            = -1             # Which particle containers to use for load balancing (-1 => all)
ItoPlasmaGodunovStepper.load_per_cell           = 1.0            # Default load per grid cell.
ItoPlasmaGodunovStepper.box_sorting             = morton         # Box sorting when load balancing
ItoPlasmaGodunovStepper.particles_per_cell      = 32             # Max computational particles per cell
ItoPlasmaGodunovStepper.merge_interval          = 1              # Time steps between superparticle merging
ItoPlasmaGodunovStepper.regrid_superparticles   = true           # Make superparticles during regrids
ItoPlasmaGodunovStepper.advection_cfl           = 1.0            # Advective time step CFL restriction
ItoPlasmaGodunovStepper.diffusion_cfl           = 1.0            # Diffusive time step CFL restriction
ItoPlasmaGodunovStepper.advection_diffusion_cfl = 1.0            # Advection-diffusion time step CFL restriction
ItoPlasmaGodunovStepper.relax_dt_factor         = 500.           # Relaxation time step restriction. 
ItoPlasmaGodunovStepper.min_dt                  = 0.0            # Minimum permitted time step
ItoPlasmaGodunovStepper.max_dt                  = 1.0            # Maximum permitted time step
ItoPlasmaGodunovStepper.eb_tolerance            = 0.0            # EB intersection test tolerance
ItoPlasmaGodunovStepper.algorithm               = euler_maruyama # Integration algorithm. 'euler_maruyama' or 'trapezoidal'

# ====================================================================================================
# ItoPlasmaAir3LFA class options
# ====================================================================================================
ItoPlasmaAir3LFA.debug     = true                # Turn on/off debugging
ItoPlasmaAir3LFA.extrap_bc = true                # Use extrapolated BC or not

# Initial data
ItoPlasmaAir3LFA.init_particles  = 10000         # Number of initial particles
ItoPlasmaAir3LFA.init_weights    = 1.0           # Initial particle weights
ItoPlasmaAir3LFA.init_center     = 0 0 0         # Blob center
ItoPlasmaAir3LFA.init_radius     = 500E-6        # Blob radius

# For controlling the time step
ItoPlasmaAir3LFA.dX              = 50.0           # Maximum relative change Xnew/Xold during one time step.

# Ion transport settings. 
ItoPlasmaAir3LFA.ion_transport   = false         # By default, stationary ions. 
ItoPlasmaAir3LFA.ion_mobility    = 2E-4          # Turn on/off ion mobility

# Kinetic Monte Carlo solver settings.
ItoPlasmaAir3LFA.max_new_particles = 256         # Maximum number of computational particles to produce in reaction step
ItoPlasmaAir3LFA.max_new_photons   = 256         # Maximum number of computational photons to produce in reaction step	
ItoPlasmaAir3LFA.Ncrit             = 5           # How many firings away from a Negative particle number?
ItoPlasmaAir3LFA.prop_eps          = 0.05        # Maximum relative change in propensity function
ItoPlasmaAir3LFA.NSSA              = 10          # How many SSA steps to run when tau-leaping is inefficient
ItoPlasmaAir3LFA.SSAlim            = 1.0         # When to enter SSA instead of tau-leaping
ItoPlasmaAir3LFA.algorithm         = hybrid      # 'tau', 'ssa', or 'hybrid'

# Secondary emission
ItoPlasmaAir3LFA.impact_efficiency  = 0.00       # Impact efficiency
ItoPlasmaAir3LFA.quantum_efficiency = 0.00       # Quantum efficiency

# Photoionization parameters
ItoPlasmaAir3LFA.quenching_pressure = 0.03947    # Quenching pressure for photo-emission (atm)
ItoPlasmaAir3LFA.photoi_factor      = 1.0        # Photoionization factor
ItoPlasmaAir3LFA.photoi_f1          = 2.925E15   # Lower frequency
ItoPlasmaAir3LFA.photoi_f2          = 3.059E15   # High frequency
ItoPlasmaAir3LFA.photoi_K1          = 2.65E-2    # Converted to (mPa)^-1
ItoPlasmaAir3LFA.photoi_K2          = 1.5        # Converted to (mPa)^-1

# ====================================================================================================
# ITO_PLASMA_STREAMER_TAGGER CLASS OPTIONS
# ====================================================================================================
ItoPlasmaStreamerTagger.verbosity         = -1           # Verbosity
ItoPlasmaStreamerTagger.num_tag_boxes     = 0            # Number of allowed tag boxes (0 = tags allowe everywhere)
ItoPlasmaStreamerTagger.tag_box1_lo       = 0.0 0.0 0.0  # Only allow tags that fall between
ItoPlasmaStreamerTagger.tag_box1_hi       = 0.0 0.0 0.0  # these two corners
ItoPlasmaStreamerTagger.buffer            = 0            # Grow tagged cells

ItoPlasmaStreamerTagger.refine_curvature  = 100000.0     # Curvature refinement
ItoPlasmaStreamerTagger.coarsen_curvature = 100000.0     # Curvature coarsening	
ItoPlasmaStreamerTagger.refine_alpha      = 2.0          # Set alpha refinement. Lower  => More mesh
ItoPlasmaStreamerTagger.coarsen_alpha     = 99.0          # Set alpha coarsening. Higher => Less mesh
ItoPlasmaStreamerTagger.max_coarsen_lvl   = 0            # Set max coarsening depth

