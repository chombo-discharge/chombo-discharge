# ====================================================================================================
# POTENTIAL CURVE
# ====================================================================================================
air3.potential = 40E3
air3.basename  = pout

# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
AmrMesh.lo_corner       = -2.5E-2 -2.5E-2 -4E-2 # Low corner of problem domain
AmrMesh.hi_corner       =  2.5E-2  2.5E-2  1E-2 # High corner of problem domain
AmrMesh.verbosity       = -1          # Controls verbosity. 
AmrMesh.coarsest_domain = 64 64 64    # Number of cells on coarsest domain
AmrMesh.max_amr_depth   = 4           # Maximum amr depth
AmrMesh.max_sim_depth   = -1          # Maximum simulation depth
AmrMesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
AmrMesh.fill_ratio      = 1.0         # Fill ratio for grid generation
AmrMesh.buffer_size     = 2           # Number of cells between grid levels
AmrMesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
AmrMesh.grid_algorithm  = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting     = morton      # Morton sorting
AmrMesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
AmrMesh.max_box_size    = 16          # Maximum allowed box size
AmrMesh.max_ebis_box    = 32          # Maximum allowed box size
AmrMesh.ref_rat         = 2 2 2 2 2 2 2 # Refinement ratios
AmrMesh.num_ghost       = 3           # Number of ghost cells. Default is 3
AmrMesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
AmrMesh.mg_interp_order  = 2           # Multigrid interpolation order
AmrMesh.mg_interp_radius = 3           # Multigrid interpolation radius
AmrMesh.mg_interp_weight = 2           # Multigrid interpolation weight (for least squares)
AmrMesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
AmrMesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
AmrMesh.ebcf            = true        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
Driver.verbosity                       = 2             # Engine verbosity
Driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
Driver.plot_interval                   = 1             # Plot interval
Driver.regrid_interval                 = 5             # Regrid interval
Driver.checkpoint_interval             = 5             # Checkpoint interval
Driver.write_regrid_files              = false         # Write regrid files or not. 
Driver.write_restart_files             = false         # Write restart files or not
Driver.initial_regrids                 = 0             # Number of initial regrids
Driver.start_time                      = 0             # Start time (fresh simulations only)
Driver.stop_time                       = 50.E-9        # Stop time
Driver.max_steps                       = 100           # Maximum number of steps
Driver.geometry_only                   = false         # Special option that ONLY plots the geometry
Driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
Driver.write_memory                    = false         # Write MPI memory report
Driver.write_loads                     = true          # Write (accumulated) computational loads
Driver.output_directory                = ./            # Output directory
Driver.output_names                    = simulation    # Simulation output names
Driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
Driver.plt_vars                        = mpi_rank             # 'tags', 'mpi_rank'
Driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = false         # Allows removal of grid levels according to CellTagger
Driver.grow_geo_tags                   = 2                # How much to grow tags when using geometry-based refinement. 
Driver.refine_curvature                = 10.              # Curvature based refinement. Refines cells if curvature*dx*this > 1
Driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
Driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
Driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
Driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
Driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
Driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----


# ====================================================================================================
# FIELD_SOLVER_MULTIGRID_GMG CLASS OPTIONS (MULTIFLUID GMG SOLVER SETTINGS)
# ====================================================================================================
FieldSolverMultigrid.bc.x.lo   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.x.hi   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.y.lo   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.y.hi   = neumann 0.0          # Bc type.
FieldSolverMultigrid.bc.z.lo   = dirichlet 0.0     # Bc type.
FieldSolverMultigrid.bc.z.hi   = dirichlet 1.0     # Bc type.
FieldSolverMultigrid.plt_vars  = phi rho E res     # Plot variables. Possible vars are 'phi', 'rho', 'E', 'res'
FieldSolverMultigrid.kappa_source = true           # Volume weighted space charge density or not (depends on algorithm)

FieldSolverMultigrid.gmg_verbosity     = -1        # GMG verbosity
FieldSolverMultigrid.gmg_pre_smooth    = 12        # Number of relaxations in downsweep
FieldSolverMultigrid.gmg_post_smooth   = 12        # Number of relaxations in upsweep
FieldSolverMultigrid.gmg_bott_smooth   = 12        # NUmber of relaxations before dropping to bottom solver
FieldSolverMultigrid.gmg_min_iter      = 5         # Minimum number of iterations
FieldSolverMultigrid.gmg_max_iter      = 32        # Maximum number of iterations
FieldSolverMultigrid.gmg_exit_tol      = 1.E-14    # Residue tolerance
FieldSolverMultigrid.gmg_exit_hang     = 0.2       # Solver hang
FieldSolverMultigrid.gmg_min_cells     = 8         # Bottom drop
FieldSolverMultigrid.gmg_bc_order      = 2         # Boundary condition order for multigrid
FieldSolverMultigrid.gmg_bc_weight     = 2         # Boundary condition weights (for least squares)
FieldSolverMultigrid.gmg_jump_order    = 2         # Boundary condition order for jump conditions
FieldSolverMultigrid.gmg_jump_weight   = 2         # Boundary condition weight for jump conditions (for least squares)
FieldSolverMultigrid.gmg_bottom_solver = bicgstab  # Bottom solver type. 'simple', 'bicgstab', or 'gmres'
FieldSolverMultigrid.gmg_bottom_relax  = 12        # Number of relaxations in bottom solve ('simple' solver only)
FieldSolverMultigrid.gmg_cycle         = vcycle    # Cycle type. Only 'vcycle' supported for now
FieldSolverMultigrid.gmg_smoother      = red_black # Relaxation type. 'jacobi', 'multi_color', or 'red_black'

# ====================================================================================================
# ITO_SOLVER CLASS OPTIONS
# ====================================================================================================
ItoSolver.pvr_buffer          = 0             # Buffer for PVR.
ItoSolver.halo_buffer         = 1             # Halo buffer. 
ItoSolver.plt_vars            = phi vel dco mobility eb_part dom_part src_part   # Currently available are 'phi', 'vel', and 'dco'
ItoSolver.bisect_step         = 1.E-5         # Bisection step length for intersection tests
ItoSolver.seed                = 0             # Seed for RNG
ItoSolver.kd_direction        = -1            # Kd-tree direction, -1 => random, 0,1,2 => first plane split in this dir
ItoSolver.max_diffusion_hop   = 99.0          # Maximum diffusion hop length (in units of dx)
ItoSolver.normal_max          = 100.0         # Maximum value (absolute) that can be drawn from the exponential distribution.
ItoSolver.irr_ngp_deposition  = false         # Force irregular deposition in cut cells or not
ItoSolver.irr_ngp_interp      = true          # Force irregular interpolation in cut cells or not
ItoSolver.WhichMobilityInterpolation     = mobility      # How to interpolate mobility, 'mobility' or 'velocity', i.e. either mu_p = mu(X_p) or mu_p = (mu*E)(X_p)/E(X_p)
ItoSolver.redistribute        = false         # Turn on/off redistribution. 
ItoSolver.blend_conservation  = false         # Turn on/off blending with nonconservative divergenceo
ItoSolver.checkpointing       = particles     # Use particle numbers for writing/reading checkpoint files
ItoSolver.ppc_restart         = 32            # Maximum number of computational particles to generate for restarts.
ItoSolver.WhichMobilityInterpolation     = velocity      # 'mobility' or 'velocity', depending on how you wish to compute. 
ItoSolver.plot_deposition     = ngp           # Cloud-in-cell for plotting particles.
ItoSolver.halo_deposition     = native        # 'native' or 'ngp' (see documentation)
ItoSolver.deposition          = cic           # 'ngp' = nearest grid point
                                               # 'cic' = cloud-in-cell
                                               # 'tsc' = triangle-shaped-cloud
                                               # 'w4'  = 3rd order interpolation

# ====================================================================================================
# MC_PHOTO CLASS OPTIONS
#
# The McPhoto class is intended as a flexible RTE solver that may interface into several descriptions.
# Because of that we allow several deposition types, e.g. cloud-in-cell if one wants to compute photoionization
# profiles with less noise. If one wants the photoionization profile (which is what gets passed around
# in the TimeStepper framework) to contain just the number of Photons in a cell, one would use
# deposition_type = num. This is useful for SSA type algorithms. 
#
# Since the photoproduction source term is filled externally, and the filling of this depends on the
# CFD/FHD description, McPhoto.source_type species what the solver will expect when drawing Photons.
# For example, if one species 'volume_rate', McPhoto will interpret the internal data so as to contain
# a rate per unit volume. The number of Photons produced in a volume will then be S*dx^3*dt. If you
# filled the source term with just the number of Photons that will be produced in a cell, you should
# use source_type = number.
#
# The photogeneration mechanism can be done stochastically or determinsitically. How this is interpreted
# depends on how you implemented your source terms through the plasma_kinetics interface (or equivalent).
# This design makes sense for FHD models because the number of Photons produced in a cell can be
# computed directly, e.g. with SSA algorithms. In this way the stochasticity is provided by the SSA
# algorithm and one would use McPhoto.source_type = deterministic. For CFD models one would probably
# work with a volumetric rate, in which one could draw the number of Photons from a Poisson distribution. 
# ====================================================================================================
McPhoto.instantaneous      = true          # Instantaneous transport or not
McPhoto.max_photons        = -1            # Maximum no. generated in a cell (< = 0 yields physical Photons)
McPhoto.blend_conservation = false         # Switch for blending with the nonconservative divergence
McPhoto.pvr_buffer         = 2             # Buffer for PVR. Prevents clouds from leaking onto coarse levels.
McPhoto.halo_buffer        = 0             # Halo region for particles.      
McPhoto.random_kappa       = true          # Randomize absorption length (taken from Photon implementation)
McPhoto.plt_vars           = bulk_phot src_phot dom_phot eb_phot  # Available are 'phi' and 'src', 'phot', 'eb_phot', 'dom_phot', 'bulk_phot'
McPhoto.plot_deposition    = cic           # Cloud-in-cell for plotting particles. 
McPhoto.bisect_step        = 1.E-4         # Bisection step length for intersection tests
McPhoto.seed               = 0             # Seed for RNG
McPhoto.bc_x_low           = outflow       # Boundary condition. 'outflow', 'symmetry', or 'wall'
McPhoto.bc_x_high          = outflow       # Boundary condition
McPhoto.bc_y_low           = outflow       # Boundary condition
McPhoto.bc_y_high          = outflow       # Boundary condition
McPhoto.bc_z_low           = outflow       # Boundary condition
McPhoto.bc_z_high          = outflow       # Boundary condition
McPhoto.poiss_exp_swap     = 100           # Swap out Poisson with exponential distribution above this mean
McPhoto.photon_generation  = deterministic # Volumetric source term. 'deterministic' or 'stochastic'
McPhoto.source_type        = number        # 'number'       = Source term contains the number of Photons produced
                                            # 'volume'       = Source terms contains the number of Photons produced per unit volume
                                            # 'volume_rate'  = Source terms contains the volumetric rate
                                            # 'rate'         = Source terms contains the rate
McPhoto.deposition         = cic           # 'ngp'  = nearest grid point
                                            # 'num'  = # of Photons per cell
                                            # 'cic'  = cloud-in-cell
                                            # 'tsc'  = triangle-shaped-cloud
                                            # 'w4'   = 3rd order interpolation



# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1  -1 1E-3     # Remove irregular cell tags 
GeoCoarsener.box1_hi     =  1  1  1      # between these two corners
GeoCoarsener.box1_lvl    = 3            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
RodDielectric.electrode.on              = true          # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0 0         # One endpoint
RodDielectric.electrode.endpoint2       = 0 0 2         # Other endpoint
RodDielectric.electrode.radius          = 500E-6        # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = false         # Use dielectric or not
RodDielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 -5E-3     # Sphere center
RodDielectric.sphere.radius             = 1.0           # Radius

# ==================================================================================================== 
# ITO_PLASMA_GODUNOV CLASS OPTIONS
# ====================================================================================================
ItoPlasmaGodunovStepper.verbosity      = -10            # Verbosity
ItoPlasmaGodunovStepper.min_dt         = 1.E-10         # Minimum dt
ItoPlasmaGodunovStepper.max_dt         = 1.E-10         # Maximum dt
ItoPlasmaGodunovStepper.particle_realm = particle       # Particle Realm. Default is primal
ItoPlasmaGodunovStepper.box_sorting    = none         # Box sorting for load balancing. 'none', 'shuffle', 'std', 'morton'
ItoPlasmaGodunovStepper.load_balance   = true           # Load balance or not
ItoPlasmaGodunovStepper.load_index     = 0              # Which species to use for load balancing (-1 => all)
ItoPlasmaGodunovStepper.load_ppc       = 0              # Load estimate per cell (in addition to ppc)
ItoPlasmaGodunovStepper.nwo_reactions  = true           # Use or don't use the new reaction algorithm (presumably load balances better)
ItoPlasmaGodunovStepper.max_cells_hop  = 1.0            # Maximum cells to move in one time step
ItoPlasmaGodunovStepper.which_dt       = advection      # 'advection', 'diffusion', 'AdvectionDiffusion'
ItoPlasmaGodunovStepper.ppc            = 32             # Superparticle number of cells
ItoPlasmaGodunovStepper.eb_tolerance   = 1.0            # How many dx into the cell particles can live
ItoPlasmaGodunovStepper.merge_interval = 1              # How often to make superparticles
ItoPlasmaGodunovStepper.relax_factor   = 9999.5         # Factor in front of relaxation time	
ItoPlasmaGodunovStepper.regrid_super   = true           # Make superparticles after regrid or not
ItoPlasmaGodunovStepper.algorithm      = euler_maruyama # 'euler', 'euler_maruyama', 'midpoint'
ItoPlasmaGodunovStepper.profile        = true           # Profile advance or not
ItoPlasmaGodunovStepper.pvr_buffer     = 0              # PVR buffer for particles (overrides ito and McPhoto)
ItoPlasmaGodunovStepper.halo_buffer    = 2              # Halo buffer for particles (overrides ito and McPhoto)
ItoPlasmaGodunovStepper.filter_rho     = false          # Filter space charge or not
ItoPlasmaGodunovStepper.filter_cond    = false          # Filter conductivity or not. 
ItoPlasmaGodunovStepper.filter_1       = 0.5 1 4 true   # alpha = 0.5, stride = 1, N = 1, Compensation step = true.
ItoPlasmaGodunovStepper.filter_2       = 0.5 2 4 true   # alpha = 0.5, stride = 1, N = 1, Compensation step = true.

# ====================================================================================================
# ITO_PLASMA_AIR3 CLASS OPTIONS
# ====================================================================================================
# Initial data
ItoPlasmaAir3LFA.blob_radius     = 1.E-3         # Blob radius
ItoPlasmaAir3LFA.blob_center     = 0 0 0         # Blob center
ItoPlasmaAir3LFA.seed            = 0             # RNG seed, < 0 gives a random seed (for each rank)
ItoPlasmaAir3LFA.num_particles   = 1000000         # Number of initial particles
ItoPlasmaAir3LFA.particle_weight = 1             # Initial particle weights

# For controlling the time step
ItoPlasmaAir3LFA.dX              = 2.7            # Maximum relative change Xnew/Xold during one time step.

# For turning on/off moving ions
ItoPlasmaAir3LFA.mobile_ions    = false          # By default, stationary ions. 
ItoPlasmaAir3LFA.ion_mobility   = 2E-4           # Turn on/off ion mobility

# Reaction stuff
ItoPlasmaAir3LFA.react_ppc      = 32             # Maximum number of particles to produce in reaction step	
ItoPlasmaAir3LFA.tau_switch     = -1             # Switch from SSA to tau when reaching this many particles
ItoPlasmaAir3LFA.poisson_switch = -1            # When to approximate Poisson by normal distribution
ItoPlasmaAir3LFA.Ncrit          = 5              # How many firings away from a negative particle number?
ItoPlasmaAir3LFA.prop_eps       = 1.E99          # Maximum relative change in propensity function
ItoPlasmaAir3LFA.NSSA           = 1              # How many SSA steps to run when tau-leaping is inefficient
ItoPlasmaAir3LFA.SSAlim         = 0.1           # When to enter SSA instead of tau-leaping
ItoPlasmaAir3LFA.algorithm      = tau            # 'tau', 'ssa', or 'hybrid'

# Zheleznyak stuff.
ItoPlasmaAir3LFA.quenching_pressure = 0.03947    # Quenching pressure for photo-emission (atm)
ItoPlasmaAir3LFA.photoi_factor      = 1.0        # Photoionization factor
ItoPlasmaAir3LFA.photoi_seed        = 0          # RNG seed
ItoPlasmaAir3LFA.photoi_f1          = 2.925E15   # Lower frequency
ItoPlasmaAir3LFA.photoi_f2          = 3.059E15   # High frequency
ItoPlasmaAir3LFA.photoi_K1          = 2.65E-2    # Converted to (mPa)^-1
ItoPlasmaAir3LFA.photoi_K2          = 1.5        # Converted to (mPa)^-1


# ====================================================================================================
# ITO_PLASMA_STREAMER_TAGGER CLASS OPTIONS
# ====================================================================================================
ItoPlasmaStreamerTagger.verbosity         = -1           # Verbosity
ItoPlasmaStreamerTagger.num_boxes         = 1            # Number of allowed tag boxes (0 = tags allowe everywhere)
ItoPlasmaStreamerTagger.box1_lo           = -1 -1 -1
ItoPlasmaStreamerTagger.box1_hi           = 1 1 100E-6
ItoPlasmaStreamerTagger.buffer            = 0           # Grow tagged cells

ItoPlasmaStreamerTagger.refine_curvature  = 1.E99         # Curvature refinement
ItoPlasmaStreamerTagger.coarsen_curvature = 0.1          # Curvature coarsening	
ItoPlasmaStreamerTagger.refine_alpha      = 2.0          # Set alpha refinement. Lower  => More mesh
ItoPlasmaStreamerTagger.coarsen_alpha     = 1.E99         # Set alpha coarsening. Higher => Less mesh
ItoPlasmaStreamerTagger.max_coarsen_lvl   = 1            # Set max coarsening depth
