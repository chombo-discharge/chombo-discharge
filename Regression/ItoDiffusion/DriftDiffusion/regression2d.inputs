# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
AmrMesh.lo_corner       = -1 -1
AmrMesh.hi_corner       =  1 1 
AmrMesh.verbosity       = -1          # Controls verbosity. 
AmrMesh.coarsest_domain = 128 128     # Number of cells on coarsest domain
AmrMesh.max_amr_depth   = 0           # Maximum amr depth
AmrMesh.max_sim_depth   = 0           # Maximum simulation depth
AmrMesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
AmrMesh.fill_ratio      = 1.0         # Fill ratio for grid generation
AmrMesh.irreg_growth    = 2           # How much to grow irregular tagged cells
AmrMesh.buffer_size     = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm  = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting     = morton      # Box sorting
AmrMesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
AmrMesh.max_box_size    = 16          # Maximum allowed box size
AmrMesh.max_ebis_box    = 16          # Maximum allowed box size
AmrMesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
AmrMesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
AmrMesh.num_ghost       = 3           # Number of ghost cells. Default is 3
AmrMesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
AmrMesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
AmrMesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
AmrMesh.ebcf            = true        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
Driver.verbosity                       = 2             # Engine verbosity
Driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
Driver.plot_interval                   = 5             # Plot interval
Driver.regrid_interval                 = 5             # Regrid interval
Driver.write_regrid_files              = false         # Write regrid files or not. 
Driver.write_restart_files             = false         # Write restart files or not
Driver.checkpoint_interval             = 5            # Checkpoint interval
Driver.initial_regrids                 = 0             # Number of initial regrids
Driver.start_time                      = 0             # Start time (fresh simulations only)
Driver.stop_time                       = 6.0           # Stop time
Driver.max_steps                       = 1000           # Maximum number of steps
Driver.geometry_only                   = false         # Special option that ONLY plots the geometry
Driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
Driver.write_memory                    = false         # Write MPI memory report
Driver.write_loads                     = false         # Write (accumulated) computational loads
Driver.output_directory                = ./            # Output directory
Driver.output_names                    = simulation    # Simulation output names
Driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
Driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
Driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = false         # Allows removal of grid levels according to CellTagger
Driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
Driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
Driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
Driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
Driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
Driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----


# ====================================================================================================
# ITO_SOLVER CLASS OPTIONS
# ====================================================================================================
ItoSolver.pvr_buffer          = 0             # Buffer for PVR.
ItoSolver.halo_buffer         = 1             # Size of define halo region for particles
ItoSolver.plt_vars            = phi vel dco   # 'phi', 'vel', 'dco', 'part', 'eb_part', 'dom_part', 'src_part', 'energy_density', 'energy'
ItoSolver.bisect_step         = 1.E-4         # Bisection step length for intersection tests
ItoSolver.seed                = 0             # Seed for RNG
ItoSolver.kd_direction        = -1            # Kd-tree direction, -1 => random, 0,1,2 => first plane split in this dir
ItoSolver.max_diffusion_hop   = 2.0           # Maximum diffusion hop length (in units of dx)
ItoSolver.normal_max          = 5.0           # Maximum value (absolute) that can be drawn from the exponential distribution.
ItoSolver.redistribute        = true          # Turn on/off redistribution. 
ItoSolver.blend_conservation  = false         # Turn on/off blending with nonconservative divergenceo
ItoSolver.checkpointing       = particles     # 'particles' or 'numbers'
ItoSolver.ppc_restart         = 32            # Maximum number of computational particles to generate for restarts.
ItoSolver.irr_ngp_deposition  = false         # Force irregular deposition in cut cells or not
ItoSolver.irr_ngp_interp      = true          # Force irregular interpolation in cut cells or not
ItoSolver.WhichMobilityInterpolation     = mobility      # How to interpolate mobility, 'mobility' or 'velocity', i.e. either mu_p = mu(X_p) or mu_p = (mu*E)(X_p)/E(X_p)
ItoSolver.plot_deposition     = cic           # Cloud-in-cell for plotting particles.
ItoSolver.halo_deposition     = native        # Native or NGP (see documentation)
ItoSolver.deposition          = cic           # 'ngp' = nearest grid point
                                               # 'cic' = cloud-in-cell
                                               # 'tsc' = triangle-shaped-cloud
                                               # 'w4'  = 3rd order interpolation

# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1 -0.1         # Remove irregular cell tags 
GeoCoarsener.box1_hi     =  1 2         # between these two corners
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_SPHERE CLASS OPTIONS
# ====================================================================================================
rod_sphere.eps0                      = 1                # Background permittivity
rod_sphere.turn_off_electrode        = true             # Turn on/off electrode
rod_sphere.turn_off_dielectric       = false            # Turn on/off dielectric
rod_sphere.electrode_live            = true             # Live electrode or not
rod_sphere.electrode_radius          = 0.05             # Electrode inner radius
rod_sphere.electrode_center1         = 0 0.5            # Center 1
rod_sphere.electrode_center2         = 0 2.0            # Center 2. 
rod_sphere.dielectric_permittivity   = 4.0              # Dielectric permittivity
rod_sphere.dielectric_center         = 0.0 0            # Dielectric center
rod_sphere.dielectric_radius         = 0.15             # Dielectric radius

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
RodDielectric.electrode.on              = false         # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0           # One endpoint
RodDielectric.electrode.endpoint2       = 0 1           # Other endpoint
RodDielectric.electrode.radius          = 100E-6        # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = true          # Use dielectric or not
RodDielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 0         # Low corner
RodDielectric.sphere.radius             = 0.15          # Radius

# ====================================================================================================
# BROWNIAN_WALKER PHYSICS CLASS OPTIONS
#
# This class does an expclit AMR advection-diffusion simulation of Brownian walker particles drawn
# from a Gaussian distribution. 
# ====================================================================================================
BrownianWalker.verbosity      = -1      # Verbosity
BrownianWalker.realm          = primal  # Realm
BrownianWalker.diffusion      = true    # Turn on/off diffusion
BrownianWalker.advection      = true    # Turn on/off advection
BrownianWalker.blob_amplitude = 1.0     # Blob amplitude
BrownianWalker.blob_radius    = 0.15    # Blob radius
BrownianWalker.blob_center    = 0 0.25  # Blob center
BrownianWalker.seed           = 0       # RNG seed
BrownianWalker.num_particles  = 100000  # Number of initial particles
BrownianWalker.max_cells_hop  = 2.0     # Maximum cells to move in one time step
BrownianWalker.ppc            = 32      # Target particles per cell
BrownianWalker.load_balance   = false   # Turn on/off particle load balancing	

# Velocity, diffusion, and CFL
# ----------------------------
BrownianWalker.diffco         = 0.01    # Diffusion coefficient
BrownianWalker.omega          = 1.0     # Rotation velocity

# Cell tagging stuff
# ------------------
BrownianWalker.refine_curv = 0.1          # Refine if curvature exceeds this
BrownianWalker.refine_magn = 1E-2         # Only tag if magnitude eceeds this
BrownianWalker.buffer      = 0            # Grow tagged cells     
