# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
AmrMesh.lo_corner       = -1 -1 -1    # Low corner of problem domain
AmrMesh.hi_corner       =  1  1  1    # High corner of problem domain
AmrMesh.verbosity       = -1          # Controls verbosity. 
AmrMesh.coarsest_domain = 128 128 128 # Number of cells on coarsest domain
AmrMesh.max_amr_depth   = 1           # Maximum amr depth
AmrMesh.max_sim_depth   = -1          # Maximum simulation depth
AmrMesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
AmrMesh.fill_ratio      = 1.0         # Fill ratio for grid generation
AmrMesh.irreg_growth    = 2           # How much to grow irregular tagged cells
AmrMesh.buffer_size     = 2           # Number of cells between grid levels
AmrMesh.grid_algorithm  = br          # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
AmrMesh.box_sorting     = morton      # Morton sorting
AmrMesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
AmrMesh.max_box_size    = 16          # Maximum allowed box size
AmrMesh.max_ebis_box    = 16          # Maximum allowed box size
AmrMesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
AmrMesh.lsf_ghost       = 3           # Number of ghost cells when writing level-set to grid
AmrMesh.num_ghost       = 3           # Number of ghost cells. Default is 3
AmrMesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
AmrMesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
AmrMesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
AmrMesh.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
AmrMesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
AmrMesh.ebcf            = true        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
Driver.verbosity                       = 2             # Engine verbosity
Driver.geometry_generation             = chombo-discharge       # Grid generation method, 'chombo-discharge' or 'chombo'
Driver.geometry_scan_level             = 0             # Geometry scan level for chombo-discharge geometry generator
Driver.plot_interval                   = 5             # Plot interval
Driver.regrid_interval                 = 5             # Regrid interval
Driver.checkpoint_interval             = 5             # Checkpoint interval
Driver.writeRegridFiles              = false         # Write regrid files or not
Driver.writeRestartFiles             = false         # Write restart files or not
Driver.initial_regrids                 = 0             # Number of initial regrids
Driver.start_time                      = 0             # Start time (fresh simulations only)
Driver.stop_time                       = 1.0           # Stop time
Driver.max_steps                       = 100           # Maximum number of steps
Driver.geometry_only                   = false         # Special option that ONLY plots the geometry
Driver.ebis_memory_LoadBalancing        = false         # Use memory as loads for EBIS generation
Driver.write_memory                    = false         # Write MPI memory report
Driver.write_loads                     = false         # Write (accumulated) computational loads
Driver.output_directory                = ./            # Output directory
Driver.output_names                    = simulation    # Simulation output names
Driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
Driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
Driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
Driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
Driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
Driver.allow_coarsening                = true          # Allows removal of grid levels according to CellTagger
Driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
Driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
Driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
Driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
Driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
Driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
Driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----

# ====================================================================================================
# MC_PHOTO CLASS OPTIONS
# ====================================================================================================
McPhoto.instantaneous      = true          # Instantaneous transport or not
McPhoto.max_photons        = 1             # Maximum no. generated in a cell (< = 0 yields physical Photons)
McPhoto.blend_conservation = false         # Switch for blending with the nonconservative divergence
McPhoto.pvr_buffer         = 0             # Buffer for PVR. 
McPhoto.halo_buffer        = 1             # Halo region for particles. 
McPhoto.random_kappa       = true          # Randomize absorption length (taken from Photon implementation)
McPhoto.plt_vars           = phi src phot  # Available are 'phi' and 'src', 'phot', 'eb_phot', 'dom_phot', 'bulk_phot', 'src_phot'
McPhoto.plot_deposition    = cic           # Cloud-in-cell for plotting particles. 
McPhoto.bisect_step        = 1.E-4         # Bisection step length for intersection tests
McPhoto.seed               = 0             # Seed for RNG
McPhoto.bc_x_low           = outflow       # Boundary condition. 'outflow', 'symmetry', or 'wall'
McPhoto.bc_x_high          = outflow       # Boundary condition
McPhoto.bc_y_low           = outflow       # Boundary condition
McPhoto.bc_y_high          = outflow       # Boundary condition
McPhoto.bc_z_low           = outflow       # Boundary condition
McPhoto.bc_z_high          = outflow       # Boundary condition
McPhoto.poiss_exp_swap     = 100           # Swap out Poisson with exponential distribution above this mean
McPhoto.photon_generation  = deterministic # Volumetric source term. 'deterministic' or 'stochastic'
McPhoto.source_type        = number        # 'number'       = Source term contains the number of Photons produced
                                            # 'volume'       = Source terms contains the number of Photons produced per unit volume
                                            # 'volume_rate'  = Source terms contains the volumetric rate
                                            # 'rate'         = Source terms contains the rate
McPhoto.deposition         = cic           # 'ngp'  = nearest grid point
                                            # 'num'  = # of Photons per cell
                                            # 'cic'  = cloud-in-cell
                                            # 'tsc'  = triangle-shaped-cloud
                                            # 'w4'   = 3rd order interpolation


# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
GeoCoarsener.num_boxes   = 1            # Number of coarsening boxes (0 = don't coarsen)
GeoCoarsener.box1_lo     = -1 -1 -0.1         # Remove irregular cell tags 
GeoCoarsener.box1_hi     =  1 1 2         # between these two corners
GeoCoarsener.box1_lvl    = 0            # up to this level
GeoCoarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_DIELECTRIC CLASS OPTIONS
# ====================================================================================================
RodDielectric.electrode.on              = false         # Use electrode or not
RodDielectric.electrode.endpoint1       = 0 0 0         # One endpoint
RodDielectric.electrode.endpoint2       = 0 0 2         # Other endpoint
RodDielectric.electrode.radius          = 0.1           # Electrode radius
RodDielectric.electrode.live            = true          # Live or not

RodDielectric.dielectric.on             = true          # Use dielectric or not
RodDielectric.dielectric.shape          = sphere        # 'plane', 'box', 'perlin_box', 'sphere'.
RodDielectric.dielectric.permittivity   = 4             # Dielectric permittivity

# Subsettings for sphere
RodDielectric.sphere.center             = 0 0 0         # Sphere center
RodDielectric.sphere.radius             = 0.15          # Radius

# ====================================================================================================
# RTE_STEPPER CLASS OPTIONS
# ====================================================================================================
RtPhysicsStepper.verbosity      = -1      # Verbosity
RtPhysicsStepper.realm          = primal  # Realm 
RtPhysicsStepper.kappa          = 0.1     # Inverse absorption coefficient
RtPhysicsStepper.blob_amplitude = 1E2     # Blob amplitude
RtPhysicsStepper.blob_radius    = 0.05    # Blob radius
RtPhysicsStepper.blob_center    = 0.5 0.5 0.5 # Blob center
