name: Linux Intel

on:
  pull_request:
    types: [push, opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-linux-intel  
  cancel-in-progress: true

jobs:
  serial-no-hdf:
    if: github.event.pull_request.draft == false  
    name: Intel C++14 serial without HDF5
    runs-on: ubuntu-latest
    timeout-minutes: 90
    
    env: 
      DISCHARGE_HOME: ${{github.workspace}}
      CHOMBO_HOME: ${{github.workspace}}/Submodules/Chombo-3.3/lib      

    steps:
      - name: Checkout chombo-discharge
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install csh libgetopt-complete-perl

      - name: Install Intel compilers/MPI
        working-directory: /tmp        
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get -y install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-compiler-fortran intel-oneapi-mkl intel-oneapi-mpi intel-oneapi-mpi-devel intel-oneapi-openmp
      
      - name: Setup compilers
        run: |
          source /opt/intel/oneapi/setvars.sh
        
      - name: Copy makefile
        run: |
          cp $DISCHARGE_HOME/Local/GitHub/Make.defs.linux-intel $CHOMBO_HOME/mk/Make.defs.local          

      - name: Build Chombo (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh          
          make -s -j2 DIM=2 chombo

      - name: Build chombo-discharge/source (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 source

      - name: Build chombo-discharge/geometries (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 geometries

      - name: Build chombo-discharge/physics (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 physics

      - name: Build Chombo (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh          
          make -s -j2 DIM=3 chombo

      - name: Build chombo-discharge/source (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 source

      - name: Build chombo-discharge/geometries (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 geometries

      - name: Build chombo-discharge/physics (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 physics

      - name: Compile tests
        working-directory: ${{ env.DISCHARGE_HOME}}/Tests        
        run: |
          source /opt/intel/oneapi/setvars.sh          
          python3 tests.py --compile --benchmark --no_exec -cores 2

      - name: Run tests
        working-directory: ${{ env.DISCHARGE_HOME}}/Tests        
        run: |
          source /opt/intel/oneapi/setvars.sh          
          python3 tests.py --no_compare -cores 2          

  mpi-no-hdf:
    if: github.event.pull_request.draft == false  
    name: Intel C++14 MPI without HDF5
    runs-on: ubuntu-latest
    timeout-minutes: 90
    
    env:
      DISCHARGE_HOME: ${{github.workspace}}
      CHOMBO_HOME: ${{github.workspace}}/Submodules/Chombo-3.3/lib

    steps:
      - name: Checkout chombo-discharge
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install csh libgetopt-complete-perl

      - name: Install Intel compilers/MPI
        working-directory: /tmp        
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get -y install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-compiler-fortran intel-oneapi-mkl intel-oneapi-mpi intel-oneapi-mpi-devel intel-oneapi-openmp
      
      - name: Setup compilers
        run: |
          source /opt/intel/oneapi/setvars.sh
        
      - name: Copy makefile
        run: |
          cp $DISCHARGE_HOME/Local/GitHub/Make.defs.MPI.linux-intel $CHOMBO_HOME/mk/Make.defs.local          

      - name: Build Chombo (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh          
          make -s -j2 DIM=2 chombo

      - name: Build chombo-discharge/source (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 source

      - name: Build chombo-discharge/geometries (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 geometries

      - name: Build chombo-discharge/physics (2D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=2 physics

      - name: Build Chombo (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh          
          make -s -j2 DIM=3 chombo

      - name: Build chombo-discharge/source (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 source

      - name: Build chombo-discharge/geometries (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 geometries

      - name: Build chombo-discharge/physics (3D)
        run: |
          source /opt/intel/oneapi/setvars.sh
          make -s -j2 DIM=3 physics

      - name: Compile tests
        working-directory: ${{ env.DISCHARGE_HOME}}/Tests        
        run: |
          source /opt/intel/oneapi/setvars.sh          
          python3 tests.py --compile --benchmark --no_exec -cores 2

      - name: Run tests
        working-directory: ${{ env.DISCHARGE_HOME}}/Tests        
        run: |
          source /opt/intel/oneapi/setvars.sh          
          python3 tests.py --no_compare -cores 2 --parallel
