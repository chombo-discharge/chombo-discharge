/* chombo-discharge
 * Copyright Â© 2021 SINTEF Energy Research.
 * Please refer to Copyright.txt and LICENSE in the chombo-discharge root directory.
 */

/*!
  @file   CD_ItoKMCPhotoReaction.H
  @brief  Declaration of a class for holding photoionization reaction types in ito_plasma physics
  @author Robert Marskar
*/

#ifndef CD_ItoKMCPhotoReaction_H
#define CD_ItoKMCPhotoReaction_H

// Std includes
#include <list>

// Chombo includes
#include <REAL.H>

// Our includes
#include <CD_NamespaceHeader.H>

namespace Physics {
  namespace ItoKMC {

    /*!
      @brief Reaction class for describing photoionization in ItoKMCPhysics. 
    */
    class ItoKMCPhotoReaction
    {
    public:
      /*!
	@brief Allowed, but you need to call the define function afterwards. 
      */
      ItoKMCPhotoReaction() = default;

      /*!
	@brief Full constructor. Calls the define function. 
	@param[in] a_source  Index in the list of photon species that leads to a photo-reaction
	@param[in] a_targets List of plasma species generated by the photo-reaction. 
	@param[in] a_efficiency Reaction efficiency. 
      */
      inline ItoKMCPhotoReaction(const size_t            a_source,
                                 const std::list<size_t> a_targets,
                                 const Real              a_efficiency = 1.0) noexcept;

      /*!
	@brief Destructor. 
      */
      virtual inline ~ItoKMCPhotoReaction() noexcept;

      /*!
	@brief Define function
	@details The reaction efficiency matters if multiple reactions using the same photon species as the left hand side
	are specified. If this is the case, the user should also ensure 
	@param[in] a_source  Index in the list of photon species that leads to a photo-reaction
	@param[in] a_targets List of plasma species generated by the photo-reaction. 
	@param[in] a_efficiency Reaction efficiency. 
      */
      inline void
      define(const size_t a_source, const std::list<size_t> a_targets, const Real a_efficiency = 1.0) noexcept;

      /*!
	@brief Get the photon source
      */
      inline const size_t&
      getSourcePhoton() const noexcept;

      /*!
	@brief Get the photon target products. 
      */
      inline const std::list<size_t>&
      getTargetSpecies() const noexcept;

      /*!
	@brief Get reaction efficiency
      */
      inline const Real&
      getEfficiency() const noexcept;

    protected:
      /*!
	@brief Source photon index
      */
      size_t m_source;

      /*!
	@brief Plasma product indices
      */
      std::list<size_t> m_targets;

      /*!
	@brief Reaction efficiency
      */
      Real m_efficiency;
    };
  } // namespace ItoKMC
} // namespace Physics

#include <CD_NamespaceFooter.H>

#include <CD_ItoKMCPhotoReactionImplem.H>

#endif
